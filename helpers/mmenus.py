
from PySide6.QtCore import (Qt,QCoreApplication, QRect, QMetaObject)
from PySide6.QtGui import (QAction,QKeySequence)
from PySide6.QtWidgets import ( QStatusBar, QMenuBar,  QMenu, QToolBar)  # type: ignore

def menu_cascade(my_self1):
    
    if my_self1.login_flag == False:
        login_menu(my_self1)
    else:    
        menu_analysis_sections(my_self1)
    #analysis_section_menu
        #if my_self1.document_type == 1:
        #    menu_analysis_sections(my_self1)
        #    pass
        #elif my_self1.document_type == 2:
        #    menu_VCRH(my_self1)
        #    pass
     
def login_menu(my_self):
        # Action to quit the application.

   my_self.actionLogin = QAction()
   my_self.actionLogin.setObjectName(u"actionLogin")
   my_self.actionExit = QAction()
   my_self.actionExit.setObjectName(u"actionExit")
   my_self.actionContents = QAction()
   my_self.actionContents.setObjectName(u"actionContents")
   my_self.actionAbout = QAction()
   my_self.actionAbout.setObjectName(u"actionAbout")       

   my_self.menubar = QMenuBar()
   my_self.menubar.setObjectName(u"menubar")
   my_self.menubar.setGeometry(QRect(0, 0, 1200, 22))
   my_self.menuFile = QMenu(my_self.menubar)
   my_self.menuFile.setObjectName(u"menuFile")
   my_self.menuHelp = QMenu(my_self.menubar)
   my_self.menuHelp.setObjectName(u"menuHelp")
       
   my_self.setMenuBar(my_self.menubar)
    
   my_self.menubar.addAction(my_self.menuFile.menuAction())
   my_self.menubar.addAction(my_self.menuHelp.menuAction())
   my_self.menuFile.addAction(my_self.actionLogin)
   my_self.menuFile.addSeparator()
   my_self.menuFile.addAction(my_self.actionExit)
   my_self.menuHelp.addAction(my_self.actionContents)
   my_self.menuHelp.addSeparator()
   my_self.menuHelp.addAction(my_self.actionAbout)

   my_self.actionLogin.setText(QCoreApplication.translate("MainWindow", u"Login", None))
#if QT_CONFIG(shortcut)
   my_self.actionLogin.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+L", None))
#endif // QT_CONFIG(shortcut)
   my_self.actionExit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
#if QT_CONFIG(shortcut)
   my_self.actionExit.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+X", None))
#endif // QT_CONFIG(shortcut)
   my_self.actionContents.setText(QCoreApplication.translate("MainWindow", u"Contents", None))
   my_self.actionAbout.setText(QCoreApplication.translate("MainWindow", u"About", None))
   my_self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
   my_self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))


   my_self.actionLogin.triggered.connect(my_self.onlogin)
   my_self.actionExit.triggered.connect(my_self.onQuit)
   my_self.actionContents.triggered.connect(my_self.onContents)
   my_self.actionAbout.triggered.connect(my_self.onAbout)

   
    #"""Create status bar and content."""
   my_self.statusBar = QStatusBar()
   my_self.statusBar.setObjectName(u"statusBar")
   my_self.setStatusBar(my_self.statusBar)
   

def menu_analysis_sections(self):

    self.actionExit = QAction(self)
    self.actionExit.setObjectName(u"actionExit")
    self.actionLogout = QAction(self)
    self.actionLogout.setObjectName(u"actionLogout")
    self.actionAnalysis_Sections = QAction(self)
    self.actionAnalysis_Sections.setObjectName(u"actionAnalysis_Sections")
    self.actionConstruction_Rehab_History = QAction(self)
    self.actionConstruction_Rehab_History.setObjectName(u"actionConstruction_Rehab_History")
    self.actionConst_Rehab_Layer_Detail = QAction(self)
    self.actionConst_Rehab_Layer_Detail.setObjectName(u"actionConst_Rehab_Layer_Detail")
    self.actionProject = QAction(self)
    self.actionProject.setObjectName(u"actionProject")
    self.actionAbout = QAction(self)
    self.actionAbout.setObjectName(u"actionAbout")
    self.actionsplit = QAction(self)
    self.actionsplit.setObjectName(u"actionsplit")
    self.actionContents = QAction(self)
    self.actionContents.setObjectName(u"actionContents")
    self.actionVCRH_VCRLD_VPROJ = QAction(self)
    self.actionVCRH_VCRLD_VPROJ.setObjectName(u"actionVCRH_VCRLD_VPROJ")
    self.actionEdit_Layers = QAction(self)
    self.actionEdit_Layers.setObjectName(u"actionEdit_Layers")
 
    self.menubar = QMenuBar()
    self.menubar.setObjectName(u"menubar")
    self.menubar.setGeometry(QRect(0, 0, 1253, 22))
    self.menuFile = QMenu(self.menubar)
    self.menuFile.setObjectName(u"menuFile")
    self.menuView = QMenu(self.menubar)
    self.menuView.setObjectName(u"menuView")
    self.menuHelp = QMenu(self.menubar)
    self.menuHelp.setObjectName(u"menuHelp")
    self.setMenuBar(self.menubar)

    self.menubar.addAction(self.menuFile.menuAction())
    self.menubar.addAction(self.menuView.menuAction())
    self.menubar.addAction(self.menuHelp.menuAction())
    self.menuFile.addAction(self.actionLogout)
    self.menuFile.addSeparator()
    self.menuFile.addAction(self.actionExit)
    self.menuView.addAction(self.actionAnalysis_Sections)
    self.menuView.addAction(self.actionVCRH_VCRLD_VPROJ)
    self.menuView.addAction(self.actionConstruction_Rehab_History)
    self.menuView.addAction(self.actionConst_Rehab_Layer_Detail)
    self.menuView.addAction(self.actionProject)
    self.menuView.addSeparator()
    self.menuView.addAction(self.actionEdit_Layers)
    self.menuHelp.addAction(self.actionContents)
    self.menuHelp.addSeparator()
    self.menuHelp.addAction(self.actionAbout)

    self.actionLogout.triggered.connect(self.onLogout)
    self.actionExit.triggered.connect(self.onQuit)
    self.actionContents.triggered.connect(self.onContents)
    self.actionAbout.triggered.connect(self.onAbout)

    self.actionLogout.triggered.connect(self.onLogout)
    self.actionAnalysis_Sections.triggered.connect(self.onVAS)
    self.actionConstruction_Rehab_History.triggered.connect(self.onVCRH)
    self.actionConst_Rehab_Layer_Detail.triggered.connect(self.onVCRLD)
    self.actionProject.triggered.connect(self.onVPRJ)
    self.actionEdit_Layers.triggered.connect(self.onEditLayers)
    self.actionVCRH_VCRLD_VPROJ.triggered.connect(self.onVCRHVCRLDVPROJ)

    QMetaObject.connectSlotsByName(self)
# setupUi


    self.setWindowTitle(QCoreApplication.translate("MainWindow", u"PVMT_SNAP editor", None))
    self.actionExit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
    self.actionLogout.setText(QCoreApplication.translate("MainWindow", u"Logout", None))
    self.actionAnalysis_Sections.setText(QCoreApplication.translate("MainWindow", u"Analysis Sections", None))
    self.actionConstruction_Rehab_History.setText(QCoreApplication.translate("MainWindow", u"Construction Rehab History", None))
    self.actionConst_Rehab_Layer_Detail.setText(QCoreApplication.translate("MainWindow", u"Const Rehab Layer Detail", None))
    self.actionProject.setText(QCoreApplication.translate("MainWindow", u"Project", None))
    self.actionAbout.setText(QCoreApplication.translate("MainWindow", u"About", None))
    self.actionsplit.setText(QCoreApplication.translate("MainWindow", u"Split", None))
    self.actionContents.setText(QCoreApplication.translate("MainWindow", u"Contents", None))
    self.actionVCRH_VCRLD_VPROJ.setText(QCoreApplication.translate("MainWindow", u"VCRH_VCRLD_VPROJ", None))
    self.actionEdit_Layers.setText(QCoreApplication.translate("MainWindow", u"Edit Layers", None))
    self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
    self.menuView.setTitle(QCoreApplication.translate("MainWindow", u"View", None))
    self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
    pass

def menu_VCRH(self):

    self.actionExit = QAction(self)
    self.actionExit.setObjectName(u"actionExit")
    self.actionLogout = QAction(self)
    self.actionLogout.setObjectName(u"actionLogout")
    self.actionAnalysis_Sections = QAction(self)
    self.actionAnalysis_Sections.setObjectName(u"actionAnalysis_Sections")
    self.actionConstruction_Rehab_History = QAction(self)
    self.actionConstruction_Rehab_History.setObjectName(u"actionConstruction_Rehab_History")
    self.actionConst_Rehab_Layer_Detail = QAction(self)
    self.actionConst_Rehab_Layer_Detail.setObjectName(u"actionConst_Rehab_Layer_Detail")
    self.actionProject = QAction(self)
    self.actionProject.setObjectName(u"actionProject")
    self.actionAbout = QAction(self)
    self.actionAbout.setObjectName(u"actionAbout")
    self.actionUpdate = QAction(self)
    self.actionUpdate.setObjectName(u"actionUpdate")
    self.actionDelete = QAction(self)
    self.actionDelete.setObjectName(u"actionDelete")
    self.actionsplit = QAction(self)
    self.actionsplit.setObjectName(u"actionsplit")
    self.actionShift = QAction(self)
    self.actionShift.setObjectName(u"actionShift")
    self.actionMerge = QAction(self)
    self.actionMerge.setObjectName(u"actionMerge")
    self.actionAdjust = QAction(self)
    self.actionAdjust.setObjectName(u"actionAdjust")
    self.actionCopy = QAction(self)
    self.actionCopy.setObjectName(u"actionCopy")
    self.actionContents = QAction(self)
    self.actionContents.setObjectName(u"actionContents")
    self.actionPaste = QAction(self)
    self.actionPaste.setObjectName(u"actionPaste")
    self.actionTo_Section = QAction(self)
    self.actionTo_Section.setObjectName(u"actionTo_Section")
    self.actionTo_Road = QAction(self)
    self.actionTo_Road.setObjectName(u"actionTo_Road")

    
    self.menubar = QMenuBar(self)
    self.menubar.setObjectName(u"menubar")
    self.menubar.setGeometry(QRect(0, 0, 1253, 22))
    self.menuFile = QMenu(self.menubar)
    self.menuFile.setObjectName(u"menuFile")
    self.menuView = QMenu(self.menubar)
    self.menuView.setObjectName(u"menuView")
    self.menuHelp = QMenu(self.menubar)
    self.menuHelp.setObjectName(u"menuHelp")
    self.menuEdit = QMenu(self.menubar)
    self.menuEdit.setObjectName(u"menuEdit")
    self.menuAdd = QMenu(self.menuEdit)
    self.menuAdd.setObjectName(u"menuAdd")
    self.setMenuBar(self.menubar)
   
    self.statusBar = QStatusBar(self)
    self.statusBar.setObjectName(u"statusBar")
    self.setStatusBar(self.statusBar)

    self.menubar.addAction(self.menuFile.menuAction())
    self.menubar.addAction(self.menuView.menuAction())
    self.menubar.addAction(self.menuEdit.menuAction())
    self.menubar.addAction(self.menuHelp.menuAction())
    self.menuFile.addAction(self.actionLogout)
    self.menuFile.addSeparator()
    self.menuFile.addAction(self.actionExit)
    self.menuView.addAction(self.actionAnalysis_Sections)
    self.menuView.addAction(self.actionConstruction_Rehab_History)
    self.menuView.addAction(self.actionConst_Rehab_Layer_Detail)
    self.menuView.addAction(self.actionProject)
    self.menuHelp.addAction(self.actionContents)
    self.menuHelp.addSeparator()
    self.menuHelp.addAction(self.actionAbout)
    self.menuEdit.addAction(self.menuAdd.menuAction())
    self.menuEdit.addAction(self.actionUpdate)
    self.menuEdit.addAction(self.actionCopy)
    self.menuEdit.addAction(self.actionPaste)
    self.menuEdit.addAction(self.actionDelete)
    self.menuEdit.addSeparator()
    self.menuEdit.addAction(self.actionMerge)
    self.menuAdd.addAction(self.actionTo_Section)
    self.menuAdd.addAction(self.actionTo_Road)
    
    self.actionContents.triggered.connect(self.onContents)
    self.actionAbout.triggered.connect(self.onAbout)
   
    self.actionExit.triggered.connect(self.onExit)
    self.actionLogout.triggered.connect(self.onLogout)
    self.actionAnalysis_Sections.triggered.connect(self.onVAS)
    self.actionConstruction_Rehab_History.triggered.connect(self.onVCRH)
    self.actionConst_Rehab_Layer_Detail.triggered.connect(self.onVCRLD)
    self.actionProject.triggered.connect(self.onVPRJ)
        
    self.setWindowTitle(QCoreApplication.translate("MainWindow", u"PVMT_SNAP editor", None))
    self.actionExit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
    self.actionLogout.setText(QCoreApplication.translate("MainWindow", u"Logout", None))
    self.actionAnalysis_Sections.setText(QCoreApplication.translate("MainWindow", u"Analysis Sections", None))
    self.actionConstruction_Rehab_History.setText(QCoreApplication.translate("MainWindow", u"Construction Rehab History", None))
    self.actionConst_Rehab_Layer_Detail.setText(QCoreApplication.translate("MainWindow", u"Const Rehab Layer Detail", None))
    self.actionProject.setText(QCoreApplication.translate("MainWindow", u"Project", None))
    self.actionAbout.setText(QCoreApplication.translate("MainWindow", u"About", None))
    self.actionUpdate.setText(QCoreApplication.translate("MainWindow", u"Update", None))
#if QT_CONFIG(tooltip)
    self.actionUpdate.setToolTip(QCoreApplication.translate("MainWindow", u"Update Existing Section Data", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
    self.actionUpdate.setStatusTip(QCoreApplication.translate("MainWindow", u"Update Existing Section Data", None))
#endif // QT_CONFIG(statustip)
    self.actionDelete.setText(QCoreApplication.translate("MainWindow", u"Delete", None))
    self.actionsplit.setText(QCoreApplication.translate("MainWindow", u"Split", None))
    self.actionShift.setText(QCoreApplication.translate("MainWindow", u"Shift", None))
    self.actionMerge.setText(QCoreApplication.translate("MainWindow", u"Merge", None))
#if QT_CONFIG(tooltip)
    self.actionMerge.setToolTip(QCoreApplication.translate("MainWindow", u"Merge Two Sections", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
    self.actionMerge.setStatusTip(QCoreApplication.translate("MainWindow", u"Merge Two Sections", None))
#endif // QT_CONFIG(statustip)
    self.actionAdjust.setText(QCoreApplication.translate("MainWindow", u"Adjust", None))
    self.actionCopy.setText(QCoreApplication.translate("MainWindow", u"Copy", None))
#if QT_CONFIG(tooltip)
    self.actionCopy.setToolTip(QCoreApplication.translate("MainWindow", u" Copy Project  Data from a Section", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
    self.actionCopy.setStatusTip(QCoreApplication.translate("MainWindow", u"Copy Project Data From a Section", None))
#endif // QT_CONFIG(statustip)
    self.actionContents.setText(QCoreApplication.translate("MainWindow", u"Contents", None))
    self.actionPaste.setText(QCoreApplication.translate("MainWindow", u"Paste", None))
#if QT_CONFIG(tooltip)
    self.actionPaste.setToolTip(QCoreApplication.translate("MainWindow", u"Paste Project Data to a Section", None))
#endif // QT_CONFIG(tooltip)
    self.actionTo_Section.setText(QCoreApplication.translate("MainWindow", u"To Section", None))
    self.actionTo_Road.setText(QCoreApplication.translate("MainWindow", u"To Road", None))
    self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
    self.menuView.setTitle(QCoreApplication.translate("MainWindow", u"View", None))
    self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
    self.menuEdit.setTitle(QCoreApplication.translate("MainWindow", u"Edit", None))
    self.menuAdd.setTitle(QCoreApplication.translate("MainWindow", u"Add", None))
   
    


def menu_logout(my_self):
    pass

def menu_init(my_self):
    my_self.menubar = None 
    my_self.menubar = QMenuBar()
    my_self.menubar.setObjectName(u"menubar")
    my_self.menubar.setGeometry(QRect(0, 0, 1200, 22))
    my_self.menuFile = QMenu(my_self.menubar)
    my_self.menuFile.setObjectName(u"menuFile")
   
    my_self.menubar.addAction(my_self.menuFile.menuAction())
    my_self.menuFile.addAction(my_self.actionLogin)
    my_self.menuFile.addSeparator()
    my_self.menuFile.addAction(my_self.actionExit)    
    my_self.actionLogin.setText( u"Login")
    my_self.actionExit.setText(u"Exit")
    my_self.menuFile.setTitle( u"File")
    my_self.setMenuBar(my_self.menubar)

    pass
