# coding: utf-8
from sqlalchemy import BigInteger, Boolean, Column, DECIMAL, Date, DateTime, Float, ForeignKey, Index, Integer, Numeric, SmallInteger, Unicode, text
from sqlalchemy.dialects.mssql import DATETIMEOFFSET, UNIQUEIDENTIFIER
from sqlalchemy.sql.sqltypes import NullType
from sqlalchemy.orm import relationship
from sqlalchemy.ext.declarative import declarative_base


import sqlalchemy as sa
import sqlalchemy.orm as sao
import sqlalchemy.ext.declarative as sad

maker = sao.sessionmaker(autoflush=True, autocommit=False)
DBSession = sao.scoped_session(maker)

DBase = sad.declarative_base()
metadata = DBase.metadata


class AnalysisSample(DBase):
    __tablename__ = 'AnalysisSamples'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    create_date = Column(Date, server_default=text("('')"))
    create_user = Column(Unicode(255), server_default=text("('')"))
    data_orientation = Column(Unicode(1), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Integer, server_default=text("((0))"))
    pvmt_sample_begin_km = Column(Float(53), server_default=text("((0))"))
    pvmt_sample_end_km = Column(Float(53), server_default=text("((0))"))
    pvmt_sample_nmbr = Column(Integer, server_default=text("((0))"))
    pvmt_sample_section_misc = Column(Unicode(255), server_default=text("('')"))
    pvmt_section_survey_year = Column(Integer, server_default=text("((0))"))
    update_date = Column(Date, server_default=text("('')"))
    update_user = Column(Unicode(255), server_default=text("('')"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class AnalysisSection(DBase):
    __tablename__ = 'Analysis_Sections'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    Budget_Category_Override = Column(Unicode(50), server_default=text("('')"))
    COM_COST = Column(Float(53), server_default=text("((0))"))
    COM_TRT = Column(Unicode(200), server_default=text("('')"))
    COM_YEAR = Column(Integer, server_default=text("((0))"))
    Comments = Column(Unicode(255), server_default=text("('')"))
    Default_Double = Column(Float(53), server_default=text("((0))"))
    Default_Integer = Column(SmallInteger, server_default=text("((0))"))
    EOLD = Column(Float(53), server_default=text("((0))"))
    ESAL = Column(Float(53), nullable=False, server_default=text("((-1))"))
    Attribute51 = Column(Unicode(10), server_default=text("('')"))
    FilterColumn = Column(Boolean, server_default=text("((0))"))
    FunctionClass = Column(Integer, server_default=text("((0))"))
    Pavement_A = Column(Integer, server_default=text("((0))"))
    RD_Name = Column(Unicode(50), server_default=text("('')"))
    RT_Class = Column(Unicode(10), server_default=text("('')"))
    Reversed = Column(Boolean, server_default=text("((0))"))
    SRI = Column(Unicode(10), server_default=text("('')"))
    SRI_From = Column(Float(53), server_default=text("((0))"))
    SRI_To = Column(Float(53), server_default=text("((0))"))
    Segment = Column(Integer, server_default=text("((0))"))
    Segment_Length = Column(Integer, server_default=text("((0))"))
    Trt_Family = Column(Unicode(50), server_default=text("('')"))
    Year = Column(Integer, server_default=text("((0))"))
    anl_chip_seal = Column(Unicode(5), server_default=text("('')"))
    anl_rural = Column(Unicode(5), server_default=text("('')"))
    anlss_sctn_annual_flex_esal = Column(Integer, server_default=text("((0))"))
    anlss_sctn_annual_rigid_esal = Column(Integer, server_default=text("((0))"))
    anlss_sctn_cumul_flex_esal = Column(Integer, server_default=text("((0))"))
    anlss_sctn_cumul_rigid_esal = Column(Integer, server_default=text("((0))"))
    begin_english_station_nmbr = Column(Unicode(30), server_default=text("('')"))
    begin_landmark_desc = Column(Unicode(50), server_default=text("('')"))
    begin_lat = Column(Float(53), server_default=text("((0))"))
    begin_long = Column(Float(53), server_default=text("((0))"))
    county_name = Column(Unicode(100), server_default=text("('')"))
    county_nmbr = Column(SmallInteger, server_default=text("((0))"))
    create_date = Column(Date, server_default=text("('')"))
    create_user = Column(Unicode(30), server_default=text("('')"))
    dFragWithSkip_Cluster = Column(Unicode(10), server_default=text("('')"))
    data_accum_direction = Column(Unicode(1), server_default=text("('')"))
    dd_Alligator_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    dd_Alligator_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    dd_Alligator_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    dd_Bleeding_0 = Column(Float(53), server_default=text("((0))"))
    dd_Bleeding_1 = Column(Float(53), server_default=text("((0))"))
    dd_Bleeding_2 = Column(Float(53), server_default=text("((0))"))
    dd_Block_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    dd_Block_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    dd_Block_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    dd_Blowup_0 = Column(Float(53), server_default=text("((0))"))
    dd_Blowup_1 = Column(Float(53), server_default=text("((0))"))
    dd_Blowup_2 = Column(Float(53), server_default=text("((0))"))
    dd_Corner_Break_0 = Column(Float(53), server_default=text("((0))"))
    dd_Corner_Break_1 = Column(Float(53), server_default=text("((0))"))
    dd_Corner_Break_2 = Column(Float(53), server_default=text("((0))"))
    dd_D_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    dd_D_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    dd_D_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    dd_Edge_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    dd_Edge_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    dd_Edge_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    dd_Faulting_0 = Column(Float(53), server_default=text("((0))"))
    dd_Faulting_1 = Column(Float(53), server_default=text("((0))"))
    dd_Faulting_2 = Column(Float(53), server_default=text("((0))"))
    dd_IRI_0 = Column(Float(53), server_default=text("((0))"))
    dd_IRI_1 = Column(Float(53), server_default=text("((0))"))
    dd_IRI_2 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Count_0 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Count_1 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Count_2 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Deterioration_0 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Deterioration_1 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Deterioration_2 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Seal_Deterioration_0 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Seal_Deterioration_1 = Column(Float(53), server_default=text("((0))"))
    dd_Joint_Seal_Deterioration_2 = Column(Float(53), server_default=text("((0))"))
    dd_Lane_Shoulder_Dropoff_0 = Column(Float(53), server_default=text("((0))"))
    dd_Lane_Shoulder_Dropoff_1 = Column(Float(53), server_default=text("((0))"))
    dd_Lane_Shoulder_Dropoff_2 = Column(Float(53), server_default=text("((0))"))
    dd_Longitudinal_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    dd_Longitudinal_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    dd_Longitudinal_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    dd_Map_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    dd_Map_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    dd_Map_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    dd_Patching_0 = Column(Float(53), server_default=text("((0))"))
    dd_Patching_1 = Column(Float(53), server_default=text("((0))"))
    dd_Patching_2 = Column(Float(53), server_default=text("((0))"))
    dd_Potholes_0 = Column(Float(53), server_default=text("((0))"))
    dd_Potholes_1 = Column(Float(53), server_default=text("((0))"))
    dd_Potholes_2 = Column(Float(53), server_default=text("((0))"))
    dd_Pumping_0 = Column(Float(53), server_default=text("((0))"))
    dd_Pumping_1 = Column(Float(53), server_default=text("((0))"))
    dd_Pumping_2 = Column(Float(53), server_default=text("((0))"))
    dd_Punchouts_0 = Column(Float(53), server_default=text("((0))"))
    dd_Punchouts_1 = Column(Float(53), server_default=text("((0))"))
    dd_Punchouts_2 = Column(Float(53), server_default=text("((0))"))
    dd_Punchouts_ph = Column(Float(53), server_default=text("((0))"))
    dd_Raveling_0 = Column(Float(53), server_default=text("((0))"))
    dd_Raveling_1 = Column(Float(53), server_default=text("((0))"))
    dd_Raveling_2 = Column(Float(53), server_default=text("((0))"))
    dd_Refl_Crack_Transverse_0 = Column(Float(53), server_default=text("((0))"))
    dd_Refl_Crack_Transverse_1 = Column(Float(53), server_default=text("((0))"))
    dd_Refl_Crack_Transverse_2 = Column(Float(53), server_default=text("((0))"))
    dd_Reflective_Cracking_Long_0 = Column(Float(53), server_default=text("((0))"))
    dd_Reflective_Cracking_Long_1 = Column(Float(53), server_default=text("((0))"))
    dd_Reflective_Cracking_Long_2 = Column(Float(53), server_default=text("((0))"))
    dd_Rutting_0 = Column(Float(53), server_default=text("((0))"))
    dd_Rutting_1 = Column(Float(53), server_default=text("((0))"))
    dd_Rutting_2 = Column(Float(53), server_default=text("((0))"))
    dd_Slab_Replacement = Column(Float(53), server_default=text("((0))"))
    dd_Slab_Replacement_0 = Column(Float(53), server_default=text("((0))"))
    dd_Slab_Replacement_1 = Column(Float(53), server_default=text("((0))"))
    dd_Slab_Replacement_2 = Column(Float(53), server_default=text("((0))"))
    dd_Spalling_Longitudinal_0 = Column(Float(53), server_default=text("((0))"))
    dd_Spalling_Longitudinal_1 = Column(Float(53), server_default=text("((0))"))
    dd_Spalling_Longitudinal_2 = Column(Float(53), server_default=text("((0))"))
    dd_Spalling_Transverse_0 = Column(Float(53), server_default=text("((0))"))
    dd_Spalling_Transverse_1 = Column(Float(53), server_default=text("((0))"))
    dd_Spalling_Transverse_2 = Column(Float(53), server_default=text("((0))"))
    dd_Transverse_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    dd_Transverse_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    dd_Transverse_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    dd_avg_fault_depth_qty = Column(Float(53), server_default=text("((0))"))
    dd_avg_iri_qty = Column(Float(53), server_default=text("((0))"))
    dd_avg_rut_depth = Column(Float(53), server_default=text("((0))"))
    dd_data_orientation = Column(Unicode(10), server_default=text("('')"))
    dd_distress_rating_nmbr = Column(SmallInteger, server_default=text("((0))"))
    dd_faults_qty = Column(SmallInteger, server_default=text("((0))"))
    dd_pvmt_condition_rating_nmbr = Column(SmallInteger, server_default=text("((0))"))
    dd_pvmt_section_survey_year = Column(SmallInteger, server_default=text("((0))"))
    dd_roughness_rating_nmbr = Column(SmallInteger, server_default=text("((0))"))
    divided_hwy_ind = Column(Unicode(1), server_default=text("('')"))
    document_id = Column(SmallInteger, server_default=text("((0))"))
    ds_Block_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    ds_Block_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    ds_Blowup_0 = Column(Float(53), server_default=text("((0))"))
    ds_Blowup_1 = Column(Float(53), server_default=text("((0))"))
    ds_Blowup_2 = Column(Float(53), server_default=text("((0))"))
    ds_Corner_Break_0 = Column(Float(53), server_default=text("((0))"))
    ds_Corner_Break_1 = Column(Float(53), server_default=text("((0))"))
    ds_Faulting_0 = Column(Float(53), server_default=text("((0))"))
    ds_Faulting_1 = Column(Float(53), server_default=text("((0))"))
    ds_Faulting_2 = Column(Float(53), server_default=text("((0))"))
    ds_IRI_0 = Column(Float(53), server_default=text("((0))"))
    ds_IRI_1 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Seal_Deterioration_0 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Seal_Deterioration_1 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Seal_Deterioration_2 = Column(Float(53), server_default=text("((0))"))
    ds_Lane_Shoulder_Dropoff_0 = Column(Float(53), server_default=text("((0))"))
    ds_Lane_Shoulder_Dropoff_1 = Column(Float(53), server_default=text("((0))"))
    ds_Lane_Shoulder_Dropoff_2 = Column(Float(53), server_default=text("((0))"))
    ds_Longitudinal_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    ds_Longitudinal_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    ds_Longitudinal_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    ds_Map_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    ds_Map_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    ds_Map_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    ds_Patching_0 = Column(Float(53), server_default=text("((0))"))
    ds_Patching_1 = Column(Float(53), server_default=text("((0))"))
    ds_Patching_2 = Column(Float(53), server_default=text("((0))"))
    ds_Potholes_0 = Column(Float(53), server_default=text("((0))"))
    ds_Potholes_1 = Column(Float(53), server_default=text("((0))"))
    ds_Potholes_2 = Column(Float(53), server_default=text("((0))"))
    ds_Pumping_0 = Column(Float(53), server_default=text("((0))"))
    ds_Pumping_1 = Column(Float(53), server_default=text("((0))"))
    ds_Pumping_2 = Column(Float(53), server_default=text("((0))"))
    ds_Punchouts_0 = Column(Float(53), server_default=text("((0))"))
    ds_Punchouts_1 = Column(Float(53), server_default=text("((0))"))
    ds_Punchouts_2 = Column(Float(53), server_default=text("((0))"))
    ds_Raveling_0 = Column(Float(53), server_default=text("((0))"))
    ds_Raveling_1 = Column(Float(53), server_default=text("((0))"))
    ds_Alligator_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    ds_Alligator_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    ds_Alligator_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    ds_Bleeding_0 = Column(Float(53), server_default=text("((0))"))
    ds_Bleeding_1 = Column(Float(53), server_default=text("((0))"))
    ds_Bleeding_2 = Column(Float(53), server_default=text("((0))"))
    ds_Block_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    ds_Corner_Break_2 = Column(Float(53), server_default=text("((0))"))
    ds_D_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    ds_D_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    ds_D_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    ds_Edge_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    ds_Edge_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    ds_Edge_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    ds_IRI_2 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Count_0 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Count_1 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Count_2 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Deterioration_0 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Deterioration_1 = Column(Float(53), server_default=text("((0))"))
    ds_Joint_Deterioration_2 = Column(Float(53), server_default=text("((0))"))
    ds_Raveling_2 = Column(Float(53), server_default=text("((0))"))
    ds_Refl_Crack_Transverse_0 = Column(Float(53), server_default=text("((0))"))
    ds_Refl_Crack_Transverse_1 = Column(Float(53), server_default=text("((0))"))
    ds_Refl_Crack_Transverse_2 = Column(Float(53), server_default=text("((0))"))
    ds_Reflective_Cracking_Long_0 = Column(Float(53), server_default=text("((0))"))
    ds_Reflective_Cracking_Long_1 = Column(Float(53), server_default=text("((0))"))
    ds_Reflective_Cracking_Long_2 = Column(Float(53), server_default=text("((0))"))
    ds_Rutting_0 = Column(Float(53), server_default=text("((0))"))
    ds_Rutting_1 = Column(Float(53), server_default=text("((0))"))
    ds_Rutting_2 = Column(Float(53), server_default=text("((0))"))
    ds_Slab_Replacement = Column(Float(53), server_default=text("((0))"))
    ds_Slab_Replacement_0 = Column(Float(53), server_default=text("((0))"))
    ds_Slab_Replacement_1 = Column(Float(53), server_default=text("((0))"))
    ds_Slab_Replacement_2 = Column(Float(53), server_default=text("((0))"))
    ds_Spalling_Longitudinal_0 = Column(Float(53), server_default=text("((0))"))
    ds_Spalling_Longitudinal_1 = Column(Float(53), server_default=text("((0))"))
    ds_Spalling_Longitudinal_2 = Column(Float(53), server_default=text("((0))"))
    ds_Spalling_Transverse_0 = Column(Float(53), server_default=text("((0))"))
    ds_Spalling_Transverse_1 = Column(Float(53), server_default=text("((0))"))
    ds_Spalling_Transverse_2 = Column(Float(53), server_default=text("((0))"))
    ds_Transverse_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    ds_Transverse_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    ds_Transverse_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    end_english_station_nmbr = Column(Unicode(30), server_default=text("('')"))
    end_landmark_desc = Column(Unicode(50), server_default=text("('')"))
    end_lat = Column(Float(53), server_default=text("((0))"))
    end_long = Column(Float(53), server_default=text("((0))"))
    esal_aadt = Column(Float(53), server_default=text("((0))"))
    esal_flexible_annual = Column(Integer, server_default=text("((0))"))
    esal_kip_factor = Column(Integer, server_default=text("((0))"))
    esal_pct_trucks = Column(Float(53), server_default=text("((0))"))
    esal_rigid_annual = Column(Integer, server_default=text("((0))"))
    full_annual_flexible_esal = Column(Integer, server_default=text("((0))"))
    full_annual_rigid_esal = Column(Integer, server_default=text("((0))"))
    full_cumulative_flexible_esal = Column(Integer, server_default=text("((0))"))
    full_cumulative_rigid_esal = Column(Integer, server_default=text("((0))"))
    left_shoulder_width_code = Column(Unicode(4), server_default=text("('')"))
    left_shoulder_width_desc = Column(Unicode(30), server_default=text("('')"))
    maint_dis_nmbr = Column(SmallInteger, server_default=text("((0))"))
    mapid = Column(Integer, server_default=text("((0))"))
    max_design_hourly_vol = Column(Integer, server_default=text("((0))"))
    max_design_hourly_vol_year = Column(SmallInteger, server_default=text("((0))"))
    max_trffc_growth_rate = Column(Float(53), server_default=text("((0))"))
    max_trffc_section_aadt = Column(Integer, server_default=text("((0))"))
    max_trffc_section_aadt_year = Column(SmallInteger, server_default=text("((0))"))
    max_truck_trffc_pct = Column(Float(53), server_default=text("((0))"))
    measured_section_length = Column(Float(53), server_default=text("((0))"))
    mslink = Column(SmallInteger, server_default=text("((0))"))
    paved_shoulder_ind = Column(Unicode(1), server_default=text("('')"))
    ph_pvmt_proj_actl_end_date = Column(Date, server_default=text("('')"))
    ph_pvmt_rehab_affctd_srfc_pct = Column(SmallInteger, server_default=text("((0))"))
    ph_rehab_thickness = Column(Float(53), server_default=text("((0))"))
    ph_rehab_type_code = Column(Unicode(3), server_default=text("('')"))
    ph_resurfacing_type_code = Column(Unicode(3), server_default=text("('')"))
    plan_section_length = Column(Float(53), server_default=text("((0))"))
    pvmt_analysis_section_id = Column(Integer, server_default=text("((0))"))
    pvmt_analysis_section_id_ = Column(Unicode(10), server_default=text("('')"))
    pvmt_anlyss_sctn_nhs_ind = Column(Unicode(1), server_default=text("('')"))
    pvmt_condition_rating_nmbr = Column(SmallInteger, server_default=text("((0))"))
    pvmt_mdfd_structure_nmbr = Column(Float(53), server_default=text("((0))"))
    pvmt_memo = Column(Unicode(200), server_default=text("('')"))
    pvmt_pre_type_code = Column(Unicode(5), server_default=text("('')"))
    pvmt_structure_nmbr = Column(Float(53), server_default=text("((0))"))
    pvmt_type_code = Column(Unicode(5), server_default=text("('')"))
    pvmt_type_code_clustering = Column(Unicode(255), server_default=text("('')"))
    pvmt_type_desc = Column(Unicode(30), server_default=text("('')"))
    right_shoulder_width_code = Column(Unicode(4), server_default=text("('')"))
    right_shoulder_width_desc = Column(Unicode(30), server_default=text("('')"))
    road_type = Column(Unicode(25), server_default=text("('')"))
    route_id = Column(Unicode(11), server_default=text("('')"))
    section_lane_cnt = Column(SmallInteger, server_default=text("((0))"))
    section_total_lanes = Column(SmallInteger, server_default=text("((0))"))
    total_roadway_width_code = Column(Unicode(4), server_default=text("('')"))
    total_roadway_width_desc = Column(Unicode(30), server_default=text("('')"))
    traffic_esal_base_year = Column(SmallInteger, server_default=text("((0))"))
    update_date = Column(Date, server_default=text("('')"))
    update_user = Column(Unicode(30), server_default=text("('')"))
    weight = Column(Unicode(25), server_default=text("('')"))
    zDensityAttribute = Column(DECIMAL(28, 15), server_default=text("((0))"))
    zz_Deighton_Fix = Column(Boolean, server_default=text("((0))"))
    OwnerId = Column(UNIQUEIDENTIFIER)
    survey_avg_lane_width = Column(Unicode(256))


class AnalysisSectionsRaw(DBase):
    __tablename__ = 'Analysis_Sections_Raw'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    ANLSS_SCTN_CUMUL_FLEX_ESAL = Column(Float(53), server_default=text("((0))"))
    ANLSS_SCTN_CUMUL_RIGID_ESAL = Column(Float(53), server_default=text("((0))"))
    ANL_CHIP_SEAL = Column(Unicode(4000), server_default=text("('')"))
    ANL_RURAL = Column(Unicode(4000), server_default=text("('')"))
    ATTRIBUTE51 = Column(Unicode(4000), server_default=text("('')"))
    BEGIN_ENGLISH_STATION_NMBR = Column(Unicode(4000), server_default=text("('')"))
    COM_TRT = Column(Unicode(4000), server_default=text("('')"))
    COM_YEAR = Column(Float(53), server_default=text("((0))"))
    COUNTY_NAME = Column(Unicode(4000), server_default=text("('')"))
    COUNTY_NMBR = Column(Float(53), server_default=text("((0))"))
    CREATE_DATE = Column(DateTime, server_default=text("('')"))
    CREATE_USER = Column(Unicode(4000), server_default=text("('')"))
    DATA_ACCUM_DIRECTION = Column(Unicode(4000), server_default=text("('')"))
    END_LANDMARK_DESC = Column(Unicode(4000), server_default=text("('')"))
    END_LAT = Column(Float(53), server_default=text("((0))"))
    END_LONG = Column(Float(53), server_default=text("((0))"))
    ESAL = Column(Float(53), server_default=text("((0))"))
    ESAL_AADT = Column(Float(53), server_default=text("((0))"))
    ESAL_FLEXIBLE_ANNUAL = Column(Float(53), server_default=text("((0))"))
    ESAL_KIP_FACTOR = Column(Float(53), server_default=text("((0))"))
    ESAL_PCT_TRUCKS = Column(Float(53), server_default=text("((0))"))
    ESAL_RIGID_ANNUAL = Column(Float(53), server_default=text("((0))"))
    FILTERCOLUMN = Column(Float(53), server_default=text("((0))"))
    FULL_ANNUAL_FLEXIBLE_ESAL = Column(Float(53), server_default=text("((0))"))
    FULL_ANNUAL_RIGID_ESAL = Column(Float(53), server_default=text("((0))"))
    ANLSS_SCTN_ANNUAL_FLEX_ESAL = Column(Float(53), server_default=text("((0))"))
    ANLSS_SCTN_ANNUAL_RIGID_ESAL = Column(Float(53), server_default=text("((0))"))
    BEGIN_LANDMARK_DESC = Column(Unicode(4000), server_default=text("('')"))
    BEGIN_LAT = Column(Float(53), server_default=text("((0))"))
    BEGIN_LONG = Column(Float(53), server_default=text("((0))"))
    BUDGET_CATEGORY_OVERRIDE = Column(Unicode(4000), server_default=text("('')"))
    COMMENTS = Column(Unicode(4000), server_default=text("('')"))
    COM_COST = Column(Float(53), server_default=text("((0))"))
    DEFAULT_DOUBLE = Column(Float(53), server_default=text("((0))"))
    DEFAULT_INTEGER = Column(Float(53), server_default=text("((0))"))
    DFRAGWITHSKIP_CLUSTER = Column(Unicode(4000), server_default=text("('')"))
    DIVIDED_HWY_IND = Column(Unicode(4000), server_default=text("('')"))
    DOCUMENT_ID = Column(Float(53), server_default=text("((0))"))
    END_ENGLISH_STATION_NMBR = Column(Unicode(4000), server_default=text("('')"))
    FULL_CUMULATIVE_FLEXIBLE_ESAL = Column(Float(53), server_default=text("((0))"))
    FULL_CUMULATIVE_RIGID_ESAL = Column(Float(53), server_default=text("((0))"))
    FUNCTIONCLASS = Column(Float(53), server_default=text("((0))"))
    MAX_DESIGN_HOURLY_VOL_YEAR = Column(Float(53), server_default=text("((0))"))
    MAX_TRFFC_GROWTH_RATE = Column(Float(53), server_default=text("((0))"))
    MAX_TRFFC_SECTION_AADT = Column(Float(53), server_default=text("((0))"))
    MAX_TRFFC_SECTION_AADT_YEAR = Column(Float(53), server_default=text("((0))"))
    MAX_TRUCK_TRFFC_PCT = Column(Float(53), server_default=text("((0))"))
    MEASURED_SECTION_LENGTH = Column(Float(53), server_default=text("((0))"))
    PH_PVMT_REHAB_AFFCTD_SRFC_PCT = Column(Float(53), server_default=text("((0))"))
    PH_REHAB_THICKNESS = Column(Float(53), server_default=text("((0))"))
    PH_REHAB_TYPE_CODE = Column(Unicode(4000), server_default=text("('')"))
    PH_RESURFACING_TYPE_CODE = Column(Unicode(4000), server_default=text("('')"))
    PLAN_SECTION_LENGTH = Column(Float(53), server_default=text("((0))"))
    PVMT_ANALYSIS_SECTION_ID = Column(Float(53), server_default=text("((0))"))
    PVMT_STRUCTURE_NMBR = Column(Float(53), server_default=text("((0))"))
    PVMT_TYPE_CODE = Column(Unicode(4000), server_default=text("('')"))
    PVMT_TYPE_CODE_CLUSTERING = Column(Unicode(4000), server_default=text("('')"))
    PVMT_TYPE_DESC = Column(Unicode(4000), server_default=text("('')"))
    RD_NAME = Column(Unicode(4000), server_default=text("('')"))
    REVERSED = Column(Float(53), server_default=text("((0))"))
    LEFT_SHOULDER_WIDTH_CODE = Column(Unicode(4000), server_default=text("('')"))
    LEFT_SHOULDER_WIDTH_DESC = Column(Unicode(4000), server_default=text("('')"))
    MAINT_DIS_NMBR = Column(Float(53), server_default=text("((0))"))
    MAPID = Column(Float(53), server_default=text("((0))"))
    MAX_DESIGN_HOURLY_VOL = Column(Float(53), server_default=text("((0))"))
    MSLINK = Column(Float(53), server_default=text("((0))"))
    PAVED_SHOULDER_IND = Column(Unicode(4000), server_default=text("('')"))
    PAVEMENT_A = Column(Float(53), server_default=text("((0))"))
    PH_PVMT_PROJ_ACTL_END_DATE = Column(DateTime, server_default=text("('')"))
    PVMT_ANALYSIS_SECTION_ID_ = Column(Unicode(4000), server_default=text("('')"))
    PVMT_ANLYSS_SCTN_NHS_IND = Column(Unicode(4000), server_default=text("('')"))
    PVMT_CONDITION_RATING_NMBR = Column(Float(53), server_default=text("((0))"))
    PVMT_MDFD_STRUCTURE_NMBR = Column(Float(53), server_default=text("((0))"))
    PVMT_MEMO = Column(Unicode(4000), server_default=text("('')"))
    PVMT_PRE_TYPE_CODE = Column(Unicode(4000), server_default=text("('')"))
    RIGHT_SHOULDER_WIDTH_CODE = Column(Unicode(4000), server_default=text("('')"))
    RIGHT_SHOULDER_WIDTH_DESC = Column(Unicode(4000), server_default=text("('')"))
    ROAD_TYPE = Column(Unicode(4000), server_default=text("('')"))
    ROUTE_ID = Column(Unicode(4000), server_default=text("('')"))
    RT_CLASS = Column(Unicode(4000), server_default=text("('')"))
    SECTION_LANE_CNT = Column(Float(53), server_default=text("((0))"))
    SECTION_TOTAL_LANES = Column(Float(53), server_default=text("((0))"))
    SEGMENT = Column(Float(53), server_default=text("((0))"))
    SEGMENT_LENGTH = Column(Float(53), server_default=text("((0))"))
    SRI = Column(Unicode(4000), server_default=text("('')"))
    SRI_FROM = Column(Float(53), server_default=text("((0))"))
    SRI_TO = Column(Float(53), server_default=text("((0))"))
    TOTAL_ROADWAY_WIDTH_CODE = Column(Unicode(4000), server_default=text("('')"))
    TOTAL_ROADWAY_WIDTH_DESC = Column(Unicode(4000), server_default=text("('')"))
    TRAFFIC_ESAL_BASE_YEAR = Column(Float(53), server_default=text("((0))"))
    TRT_FAMILY = Column(Unicode(4000), server_default=text("('')"))
    UPDATE_DATE = Column(DateTime, server_default=text("('')"))
    UPDATE_USER = Column(Unicode(4000), server_default=text("('')"))
    WEIGHT = Column(Unicode(4000), server_default=text("('')"))
    YEAR = Column(Float(53), server_default=text("((0))"))
    ZDENSITYATTRIBUTE = Column(Float(53), server_default=text("((0))"))
    ZZ_DEIGHTON_FIX = Column(Float(53), server_default=text("((0))"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class Base(DBase):
    __tablename__ = 'Base'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    OwnerId = Column(UNIQUEIDENTIFIER)
    County = Column(Integer)
    Pass_Direction = Column(Unicode(10))
    Route_Class = Column(Unicode(10))
    ID_1 = Column(Float(53))
    Inventory_Number = Column(Unicode(20))
    Street_Name = Column(Unicode(50))
    Segment_Number = Column(Integer)


class Chunk(DBase):
    __tablename__ = 'Chunks'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True)
    Length = Column(DECIMAL(18, 6), nullable=False)
    Geo = Column(NullType)
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))


class ConstRehLyrDetail(DBase):
    __tablename__ = 'Const_Reh_Lyr_Detail'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    CreatedBy = Column(Unicode(256), server_default=text("('')"))
    CreatedOn = Column(DateTime, server_default=text("('')"))
    EndedBy = Column(Unicode(256), server_default=text("('')"))
    EndedOn = Column(DateTime, server_default=text("('')"))
    ModifiedBy = Column(Unicode(256), server_default=text("('')"))
    ModifiedOn = Column(DateTime, server_default=text("('')"))
    create_date = Column(Date, server_default=text("('')"))
    create_user = Column(Unicode(30), server_default=text("('')"))
    f_szForiegnKey = Column(Unicode(20), server_default=text("('')"))
    first_material_property = Column(Unicode(15), server_default=text("('')"))
    first_rehab_material_desc = Column(Unicode(30), server_default=text("('')"))
    material_type_code = Column(Unicode(4), server_default=text("('')"))
    material_type_desc = Column(Unicode(80), server_default=text("('')"))
    proj_detail_nmbr = Column(Integer, server_default=text("((0))"))
    proj_nmbr = Column(Unicode(20), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Integer, server_default=text("((0))"))
    pvmt_course_nmbr = Column(SmallInteger, server_default=text("((0))"))
    pvmt_course_thickness = Column(Float(53), server_default=text("((0))"))
    pvmt_layer_material_desc = Column(Unicode(30), server_default=text("('')"))
    pvmt_proj_nmbr_detail = Column(Unicode(20), server_default=text("('')"))
    second_material_property = Column(Unicode(10), server_default=text("('')"))
    second_rehab_material_desc = Column(Unicode(30), server_default=text("('')"))
    third_material_property = Column(Unicode(10), server_default=text("('')"))
    third_rehab_material_desc = Column(Unicode(10), server_default=text("('')"))
    update_date = Column(Date, server_default=text("('')"))
    update_user = Column(Unicode(30), server_default=text("('')"))
    MaterialTypeCodeBackup = Column(Unicode(4))
    OwnerId = Column(UNIQUEIDENTIFIER)


class ConstRehabHistory(DBase):
    __tablename__ = 'Const_Rehab_History'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    SRI = Column(Unicode(10), server_default=text("('')"))
    SRI_From = Column(Float(53), server_default=text("((0))"))
    SRI_To = Column(Float(53), server_default=text("((0))"))
    create_date = Column(Date, server_default=text("('')"))
    create_user = Column(Unicode(30), server_default=text("('')"))
    edge_drain_ind = Column(Unicode(1), server_default=text("('')"))
    milling_thickness = Column(Float(53), server_default=text("((0))"))
    overlay_data_entered_date = Column(Date, server_default=text("('')"))
    paving_fabric_ind = Column(Unicode(1), server_default=text("('')"))
    proj_detail_nmbr = Column(Integer, server_default=text("((0))"))
    proj_nmbr = Column(Unicode(20), server_default=text("('')"))
    proj_nmbr_detail = Column(Unicode(36), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Integer, server_default=text("((0))"))
    pvmt_analysis_soil_type_code = Column(Unicode(20), server_default=text("('')"))
    pvmt_analysis_soil_type_desc = Column(Unicode(50), server_default=text("('')"))
    pvmt_proj_actl_end_date = Column(Date, server_default=text("('')"))
    pvmt_proj_nmbr_detail = Column(Unicode(20), server_default=text("('')"))
    pvmt_rehab_affctd_srfc_pct = Column(Integer, server_default=text("((0))"))
    pvmt_structure_removed_ind = Column(Unicode(10), server_default=text("('')"))
    rehab_thickness = Column(Float(53), server_default=text("((0))"))
    rehab_type_code = Column(Unicode(3), server_default=text("('')"))
    rehab_type_desc = Column(Unicode(80), server_default=text("('')"))
    resurfacing_type_code = Column(Unicode(3), server_default=text("('')"))
    resurfacing_type_desc = Column(Unicode(30), server_default=text("('')"))
    total_courses_qty = Column(Integer, server_default=text("((0))"))
    total_courses_thickness_qty = Column(Float(53), server_default=text("((0))"))
    update_date = Column(Date, server_default=text("('')"))
    update_user = Column(Unicode(30), server_default=text("('')"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class DistFeatTenth2012(DBase):
    __tablename__ = 'Dist_Feat_Tenth_2012'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    Alligator_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    Alligator_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    Alligator_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    Bleeding_0 = Column(Float(53), server_default=text("((0))"))
    Bleeding_1 = Column(Float(53), server_default=text("((0))"))
    Bleeding_2 = Column(Float(53), server_default=text("((0))"))
    Block_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    Block_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    Block_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    Blowup_0 = Column(Float(53), server_default=text("((0))"))
    Blowup_1 = Column(Float(53), server_default=text("((0))"))
    Blowup_2 = Column(Float(53), server_default=text("((0))"))
    Corner_Break_0 = Column(Float(53), server_default=text("((0))"))
    Corner_Break_1 = Column(Float(53), server_default=text("((0))"))
    Corner_Break_2 = Column(Float(53), server_default=text("((0))"))
    D_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    D_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    D_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    Edge_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    Edge_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    Edge_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    Joint_Count_0 = Column(Float(53), server_default=text("((0))"))
    Joint_Count_1 = Column(Float(53), server_default=text("((0))"))
    Joint_Count_2 = Column(Float(53), server_default=text("((0))"))
    Joint_Deterioration_0 = Column(Float(53), server_default=text("((0))"))
    Joint_Deterioration_1 = Column(Float(53), server_default=text("((0))"))
    Joint_Deterioration_2 = Column(Float(53), server_default=text("((0))"))
    Joint_Seal_Deterioration_0 = Column(Float(53), server_default=text("((0))"))
    Joint_Seal_Deterioration_1 = Column(Float(53), server_default=text("((0))"))
    Joint_Seal_Deterioration_2 = Column(Float(53), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_0 = Column(Float(53), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_1 = Column(Float(53), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_2 = Column(Float(53), server_default=text("((0))"))
    Longitudinal_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    Longitudinal_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    Longitudinal_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    Map_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    Map_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    Map_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    Patching_0 = Column(Float(53), server_default=text("((0))"))
    Patching_1 = Column(Float(53), server_default=text("((0))"))
    Patching_2 = Column(Float(53), server_default=text("((0))"))
    Potholes_0 = Column(Float(53), server_default=text("((0))"))
    Potholes_1 = Column(Float(53), server_default=text("((0))"))
    Potholes_2 = Column(Float(53), server_default=text("((0))"))
    Pumping_0 = Column(Float(53), server_default=text("((0))"))
    Pumping_1 = Column(Float(53), server_default=text("((0))"))
    Pumping_2 = Column(Float(53), server_default=text("((0))"))
    Punchouts_0 = Column(Float(53), server_default=text("((0))"))
    Punchouts_1 = Column(Float(53), server_default=text("((0))"))
    Punchouts_2 = Column(Float(53), server_default=text("((0))"))
    Raveling_0 = Column(Float(53), server_default=text("((0))"))
    Raveling_1 = Column(Float(53), server_default=text("((0))"))
    Raveling_2 = Column(Float(53), server_default=text("((0))"))
    Reflective_Crack_Transverse_0 = Column(Float(53), server_default=text("((0))"))
    Reflective_Crack_Transverse_1 = Column(Float(53), server_default=text("((0))"))
    Reflective_Crack_Transverse_2 = Column(Float(53), server_default=text("((0))"))
    Reflective_Cracking_Long_0 = Column(Float(53), server_default=text("((0))"))
    Reflective_Cracking_Long_1 = Column(Float(53), server_default=text("((0))"))
    Reflective_Cracking_Long_2 = Column(Float(53), server_default=text("((0))"))
    Reflective_crack_long_0 = Column(Float(53), server_default=text("((0))"))
    Reflective_crack_long_1 = Column(Float(53), server_default=text("((0))"))
    Reflective_crack_long_2 = Column(Float(53), server_default=text("((0))"))
    Slab_Replacement_0 = Column(Float(53), server_default=text("((0))"))
    Slab_Replacement_1 = Column(Float(53), server_default=text("((0))"))
    Slab_Replacement_2 = Column(Float(53), server_default=text("((0))"))
    Spalling_Longitudinal_0 = Column(Float(53), server_default=text("((0))"))
    Spalling_Longitudinal_1 = Column(Float(53), server_default=text("((0))"))
    Spalling_Longitudinal_2 = Column(Float(53), server_default=text("((0))"))
    Spalling_Transverse_0 = Column(Float(53), server_default=text("((0))"))
    Spalling_Transverse_1 = Column(Float(53), server_default=text("((0))"))
    Spalling_Transverse_2 = Column(Float(53), server_default=text("((0))"))
    Transverse_Cracking_0 = Column(Float(53), server_default=text("((0))"))
    Transverse_Cracking_1 = Column(Float(53), server_default=text("((0))"))
    Transverse_Cracking_2 = Column(Float(53), server_default=text("((0))"))
    data_orientation = Column(Unicode(1), server_default=text("('')"))
    pvmt_analysis_section_id = Column(SmallInteger, server_default=text("((0))"))
    pvmt_section_survey_year = Column(SmallInteger, server_default=text("((0))"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class DstrsFeature2012(DBase):
    __tablename__ = 'Dstrs_Feature_2012'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    create_date = Column(Date, server_default=text("('')"))
    create_user = Column(Unicode(30), server_default=text("('')"))
    data_orientation = Column(Unicode(1), server_default=text("('')"))
    distress_start_mi = Column(Float(53), server_default=text("((0))"))
    feature_area = Column(Float(53), server_default=text("((0))"))
    feature_width = Column(Float(53), server_default=text("((0))"))
    lane_location_code = Column(Unicode(2), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Integer, server_default=text("((0))"))
    SRI = Column(Unicode(10), server_default=text("('')"))
    SRI_From = Column(Float(53), server_default=text("((0))"))
    SRI_To = Column(Float(53), server_default=text("((0))"))
    distress_length = Column(Float(53), server_default=text("((0))"))
    distress_nmbr = Column(SmallInteger, server_default=text("((0))"))
    distress_occurence_nmbr = Column(Integer, server_default=text("((0))"))
    distress_sealed_ind = Column(Unicode(1), server_default=text("('')"))
    distress_severity_level = Column(Unicode(1), server_default=text("('')"))
    pvmt_sample_begin_mi = Column(Float(53), server_default=text("((0))"))
    pvmt_section_survey_year = Column(SmallInteger, server_default=text("((0))"))
    update_date = Column(Date, server_default=text("('')"))
    update_user = Column(Unicode(30), server_default=text("('')"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class Landmark(DBase):
    __tablename__ = 'Landmark'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    create_user = Column(Unicode(4000), server_default=text("('')"))
    landmark_km_offset = Column(Float(53), server_default=text("((0))"))
    pvmt_analysis_section_id = Column(Float(53), server_default=text("((0))"))
    update_date = Column(DateTime, server_default=text("('')"))
    update_user = Column(Unicode(4000), server_default=text("('')"))
    Landmark_Desc = Column(Unicode(250), server_default=text("('')"))
    create_date = Column(DateTime, server_default=text("('')"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class Lane(DBase):
    __tablename__ = 'Lane'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    Create_Date = Column(DateTime, server_default=text("('')"))
    Create_User = Column(Unicode(100), server_default=text("('')"))
    Lane_Code = Column(Unicode(10), server_default=text("('')"))
    Lane_Description = Column(Unicode(100), server_default=text("('')"))
    Lane_Width_Code = Column(Unicode(10), server_default=text("('')"))
    Lane_Width_Description = Column(Unicode(100), server_default=text("('')"))
    Pavement_Analysis_Section_ID = Column(Integer, server_default=text("((0))"))
    Update_Date = Column(DateTime, server_default=text("('')"))
    Update_User = Column(Unicode(100), server_default=text("('')"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class MDOTSectionCondition(DBase):
    __tablename__ = 'MDOTSectionCondition'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    Create_date = Column(DateTime, server_default=text("('')"))
    Create_user = Column(Unicode(4000), server_default=text("('')"))
    Right_texture_nmbr = Column(Float(53), server_default=text("((0))"))
    Update_date = Column(DateTime, server_default=text("('')"))
    Update_user = Column(Unicode(4000), server_default=text("('')"))
    avg_fault_depth_qty = Column(Float(53), server_default=text("((0))"))
    avg_iri_qty = Column(Float(53), server_default=text("((0))"))
    avg_iri_qty_eng = Column(Float(53), server_default=text("((0))"))
    avg_iri_qty_met = Column(Float(53), server_default=text("((0))"))
    avg_rut_depth = Column(Float(53), server_default=text("((0))"))
    center_texture_nmbr = Column(Float(53), server_default=text("((0))"))
    data_orientation = Column(Unicode(4000), server_default=text("('')"))
    distress_rating_nmbr = Column(Float(53), server_default=text("((0))"))
    high_faulting_pct = Column(Float(53), server_default=text("((0))"))
    high_iri_pct = Column(Float(53), server_default=text("((0))"))
    high_rutting_pct = Column(Float(53), server_default=text("((0))"))
    left_texture_nmbr = Column(Float(53), server_default=text("((0))"))
    low_faulting_pct = Column(Float(53), server_default=text("((0))"))
    low_iri_pct = Column(Float(53), server_default=text("((0))"))
    low_rutting_pct = Column(Float(53), server_default=text("((0))"))
    medium_faulting_pct = Column(Float(53), server_default=text("((0))"))
    medium_iri_pct = Column(Float(53), server_default=text("((0))"))
    medium_rutting_pct = Column(Float(53), server_default=text("((0))"))
    pvmt_analysis_section_id = Column(Float(53), server_default=text("((0))"))
    pvmt_condition_rating_nmbr = Column(Float(53), server_default=text("((0))"))
    pvmt_section_survey_date = Column(DateTime, server_default=text("('')"))
    pvmt_section_survey_year = Column(Float(53), server_default=text("((0))"))
    pvmt_survey_pvmt_type_code = Column(Unicode(4000), server_default=text("('')"))
    pvmt_survey_pvmt_type_desc = Column(Unicode(4000), server_default=text("('')"))
    roughness_rating_nmbr = Column(Float(53), server_default=text("((0))"))
    sub_pvmt_survey_pvmt_type_code = Column(Unicode(4000), server_default=text("('')"))
    sub_pvmt_survey_pvmt_type_desc = Column(Unicode(4000), server_default=text("('')"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class Project(DBase):
    __tablename__ = 'Project'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    begin_mi = Column(Float(53), server_default=text("((0))"))
    create_date = Column(DateTime, server_default=text("('')"))
    create_user = Column(Unicode(4000), server_default=text("('')"))
    end_mi = Column(Float(53), server_default=text("((0))"))
    proj_detail_nmbr = Column(Integer, server_default=text("((0))"))
    proj_nmbr = Column(Unicode(4000), server_default=text("('')"))
    pvmt_proj_actl_end_date = Column(DateTime, server_default=text("('')"))
    pvmt_proj_hist_proj_nmbr = Column(Unicode(4000), server_default=text("('')"))
    pvmt_proj_mix_design_nmbr = Column(Integer, server_default=text("((0))"))
    pvmt_proj_type = Column(Unicode(4000), server_default=text("('')"))
    skid_test_id = Column(Integer, server_default=text("((0))"))
    skid_test_section_ind = Column(Unicode(4000), server_default=text("('')"))
    update_date = Column(DateTime, server_default=text("('')"))
    update_user = Column(Unicode(4000), server_default=text("('')"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class SRVYDISTRESSFEATURE(DBase):
    __tablename__ = 'SRVY_DISTRESS_FEATURES'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    MP_END = Column(DECIMAL(8, 4), server_default=text("((0))"))
    MP_START = Column(DECIMAL(8, 4), server_default=text("((0))"))
    SRI = Column(Unicode(20), server_default=text("('')"))
    county_nmbr = Column(Integer, server_default=text("((0))"))
    data_accumulation_direction = Column(Unicode(1), server_default=text("('')"))
    data_orientation = Column(Unicode(1), server_default=text("('')"))
    distress_begin_mi = Column(DECIMAL(5, 3), server_default=text("((0))"))
    distress_length = Column(DECIMAL(7, 2), server_default=text("((0))"))
    distress_nmbr = Column(Integer, server_default=text("((0))"))
    distress_occurrence_nmbr = Column(Integer, server_default=text("((0))"))
    distress_remarks = Column(Unicode(50), server_default=text("('')"))
    distress_sealed_ind = Column(Unicode(1), server_default=text("('')"))
    distress_severity_level = Column(Unicode(1), server_default=text("('')"))
    feature_area = Column(DECIMAL(8, 2), server_default=text("((0))"))
    feature_width = Column(DECIMAL(6, 2), server_default=text("((0))"))
    lane_location_code = Column(Unicode(1), server_default=text("('')"))
    maint_dis_nmbr = Column(Integer, server_default=text("((0))"))
    pvmt_anal_id_txt = Column(Unicode(10), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Unicode(250), server_default=text("('')"))
    pvmt_sample_begin_mile = Column(DECIMAL(5, 3), server_default=text("((0))"))
    pvmt_sample_nmbr = Column(Integer, server_default=text("((0))"))
    pvmt_section_survey_year = Column(Integer, server_default=text("((0))"))
    route_id = Column(Unicode(10), server_default=text("('')"))
    section_begin_mile = Column(DECIMAL(5, 3), server_default=text("((0))"))
    section_end_mile = Column(DECIMAL(5, 3), server_default=text("((0))"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class SRVYMRI110MILE(DBase):
    __tablename__ = 'SRVY_MRI_1_10_MILE'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    MP_END = Column(DECIMAL(8, 4), server_default=text("((0))"))
    MP_START = Column(DECIMAL(8, 4), server_default=text("((0))"))
    SRI = Column(Unicode(20), server_default=text("('')"))
    county_nmbr = Column(Integer, server_default=text("((0))"))
    pvmt_anal_id_txt = Column(Unicode(10), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Integer, server_default=text("((0))"))
    route_id = Column(Unicode(10), server_default=text("('')"))
    section_begin_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    section_end_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    segment_avg_iri = Column(DECIMAL(8, 3), server_default=text("((0))"))
    segment_avg_iri_eng = Column(DECIMAL(8, 3), server_default=text("((0))"))
    segment_begin_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    segment_end_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class SRVYPVMTDSTRSFEATURETENTH(DBase):
    __tablename__ = 'SRVY_PVMT_DSTRS_FEATURE_TENTH'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    Alligator_Cracking_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Alligator_Cracking_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Alligator_Cracking_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Corner_Break_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Corner_Break_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Corner_Break_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    D_Cracking_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    D_Cracking_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    D_Cracking_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    LSDropoff_Average_Depth_AC_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    LSDropoff_Average_Depth_AC_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    LSDropoff_Average_Depth_AC_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    LSDropoff_Average_Depth_PCC_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    LSDropoff_Average_Depth_PCC_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    LSDropoff_Average_Depth_PCC_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_AC_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_AC_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_AC_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_PCC_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_PCC_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Lane_Shoulder_Dropoff_PCC_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Length = Column(DECIMAL(8, 4), server_default=text("((0))"))
    Longitudinal_Cracking_AC_0 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Longitudinal_Cracking_AC_1 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Longitudinal_Cracking_AC_2 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Longitudinal_Cracking_PCC_0 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Longitudinal_Cracking__PCC_1 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Longitudinal_Cracking__PCC_2 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    MP_END = Column(DECIMAL(8, 4), server_default=text("((0))"))
    MP_START = Column(DECIMAL(8, 4), server_default=text("((0))"))
    Patching_AC_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Patching_AC_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Patching_AC_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Patching__PCC_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Patching__PCC_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Patching__PCC_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Potholes_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Potholes_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Potholes_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Punchout_Repair_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Punchout_Repair_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Punchout_Repair_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Punchouts_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Punchouts_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Punchouts_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    SRI = Column(Unicode(20), server_default=text("('')"))
    Slab_replacement_0 = Column(DECIMAL(10, 1), server_default=text("((0))"))
    Slab_replacement_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Slab_replacement_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Spalling_Longitudinal_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Spalling_Longitudinal_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Spalling_Longitudinal_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Spalling_Transverse_0 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Spalling_Transverse_1 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Spalling_Transverse_2 = Column(DECIMAL(10, 2), server_default=text("((0))"))
    Transverse_Cracking_AC_0 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Transverse_Cracking_PCC_0 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Transverse_Cracking__AC_1 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Transverse_Cracking__AC_2 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Transverse_Cracking__PCC_1 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    Transverse_Cracking__PCC_2 = Column(DECIMAL(7, 3), server_default=text("((0))"))
    county_nmbr = Column(Integer, server_default=text("((0))"))
    data_accumulation_direction = Column(Unicode(1), server_default=text("('')"))
    pvmt_anal_id_txt = Column(Unicode(10), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Unicode(250), server_default=text("('')"))
    pvmt_section_survey_year = Column(Integer, server_default=text("((0))"))
    route_id = Column(Unicode(10), server_default=text("('')"))
    tenth_begin_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    tenth_end_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class SRVYPVMTSAMPLESGMT(DBase):
    __tablename__ = 'SRVY_PVMT_SAMPLE_SGMT'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    MP_END = Column(DECIMAL(8, 4), server_default=text("((0))"))
    MP_START = Column(DECIMAL(8, 4), server_default=text("((0))"))
    SRI = Column(Unicode(20), server_default=text("('')"))
    data_orientation = Column(Unicode(1), server_default=text("('')"))
    pvmt_anal_id_txt = Column(Unicode(10), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Unicode(250), server_default=text("('')"))
    pvmt_sample_begin_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    pvmt_sample_end_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    pvmt_sample_nmbr = Column(BigInteger, server_default=text("((0))"))
    pvmt_section_survey_year = Column(Integer, server_default=text("((0))"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class SRVYPVMTSCTNCOND(DBase):
    __tablename__ = 'SRVY_PVMT_SCTN_COND'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    MP_END = Column(DECIMAL(8, 4), server_default=text("((0))"))
    MP_START = Column(DECIMAL(8, 4), server_default=text("((0))"))
    PathwaySegmentId = Column(BigInteger, server_default=text("((0))"))
    SRI = Column(Unicode(20), server_default=text("('')"))
    avg_fault_depth_qty = Column(DECIMAL(4, 2), server_default=text("((0))"))
    avg_iri_qty = Column(DECIMAL(4, 2), server_default=text("((0))"))
    avg_iri_qty_eng = Column(DECIMAL(5, 2), server_default=text("((0))"))
    avg_rut_depth = Column(DECIMAL(4, 2), server_default=text("((0))"))
    begin_landmark_desc = Column(Unicode(45), server_default=text("('')"))
    begin_latitude = Column(DECIMAL(8, 6), server_default=text("((0))"))
    begin_longitude = Column(DECIMAL(8, 6), server_default=text("((0))"))
    begin_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    center_texture_nmbr = Column(DECIMAL(4, 2), server_default=text("((0))"))
    comments = Column(Unicode(254), server_default=text("('')"))
    county_nmbr = Column(Integer, server_default=text("((0))"))
    data_accumulation_direction = Column(Unicode(1), server_default=text("('')"))
    data_orientation = Column(Unicode(1), server_default=text("('')"))
    distress_rating_nmbr = Column(Integer, server_default=text("((0))"))
    end_landmark_desc = Column(Unicode(45), server_default=text("('')"))
    end_latitude = Column(DECIMAL(8, 6), server_default=text("((0))"))
    end_longitude = Column(DECIMAL(8, 6), server_default=text("((0))"))
    end_mile = Column(DECIMAL(8, 4), server_default=text("((0))"))
    faulting_joint_slope_qty = Column(Integer, server_default=text("((0))"))
    faults_qty = Column(Integer, server_default=text("((0))"))
    high_faulting_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    high_iri_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    high_rutting_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    increase_decrease = Column(Unicode(1), server_default=text("('')"))
    left_texture_nmbr = Column(DECIMAL(4, 2), server_default=text("((0))"))
    low_faulting_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    low_iri_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    low_rutting_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    lwp_rut = Column(DECIMAL(5, 2), server_default=text("((0))"))
    maint_dis_nmbr = Column(Integer, server_default=text("((0))"))
    measured_section_length = Column(DECIMAL(5, 3), server_default=text("((0))"))
    medium_faulting_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    medium_iri_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    medium_rutting_pct = Column(DECIMAL(5, 2), server_default=text("((0))"))
    pct_slabs_cracked = Column(Integer, server_default=text("((0))"))
    pvmt_anal_id_txt = Column(Unicode(10), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Unicode(250), server_default=text("('')"))
    pvmt_condition_rating_nmbr = Column(Integer, server_default=text("((0))"))
    pvmt_section_survey_date = Column(DateTime, server_default=text("('')"))
    pvmt_section_survey_year = Column(Integer, server_default=text("((0))"))
    pvmt_survey_pvmt_type_code = Column(Unicode(5), server_default=text("('')"))
    right_texture_nmbr = Column(DECIMAL(4, 2), server_default=text("((0))"))
    roughess_rating_nmbr = Column(Integer, server_default=text("((0))"))
    route_id = Column(Unicode(10), server_default=text("('')"))
    rwp_rut = Column(DECIMAL(5, 2), server_default=text("((0))"))
    srvy_measured_length = Column(DECIMAL(5, 3), server_default=text("((0))"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class SRVYPVMTSCTNDISTRES(DBase):
    __tablename__ = 'SRVY_PVMT_SCTN_DISTRESS'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, unique=True)
    MP_END = Column(DECIMAL(8, 4), server_default=text("((0))"))
    MP_START = Column(DECIMAL(8, 4), server_default=text("((0))"))
    SRI = Column(Unicode(20), server_default=text("('')"))
    avg_lane_width_ft = Column(DECIMAL(4, 2), server_default=text("((0))"))
    data_orientation = Column(Unicode(1), server_default=text("('')"))
    distress_desc = Column(Unicode(40), server_default=text("('')"))
    distress_nmbr = Column(Integer, server_default=text("((0))"))
    distress_severity_level = Column(Unicode(1), server_default=text("('')"))
    linear_ft_per_mile = Column(DECIMAL(7, 2), server_default=text("((0))"))
    pvmt_anal_id_txt = Column(Unicode(10), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Unicode(250), server_default=text("('')"))
    pvmt_section_survey_year = Column(Integer, server_default=text("((0))"))
    section_distress_density = Column(DECIMAL(11, 8), server_default=text("((0))"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    OwnerId = Column(UNIQUEIDENTIFIER)


class SampleSegment(DBase):
    __tablename__ = 'Sample_Segment'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    SRI = Column(Unicode(10), server_default=text("('')"))
    SRI_From = Column(Float(53), server_default=text("((0))"))
    SRI_To = Column(Float(53), server_default=text("((0))"))
    create_date = Column(Date, server_default=text("('')"))
    create_user = Column(Unicode(30), server_default=text("('')"))
    pvmt_analysis_section_id = Column(Integer, server_default=text("((0))"))
    pvmt_sample_begin_mi = Column(Float(53), server_default=text("((0))"))
    pvmt_sample_end_mi = Column(Float(53), server_default=text("((0))"))
    pvmt_sample_end_video_frame = Column(Unicode(14), server_default=text("('')"))
    pvmt_sample_nmbr = Column(SmallInteger, server_default=text("((0))"))
    pvmt_sample_start_video_frame = Column(Unicode(14), server_default=text("('')"))
    pvmt_section_survey_year = Column(SmallInteger, server_default=text("((0))"))
    tape_set_nmbr = Column(Integer, server_default=text("((0))"))
    update_date = Column(Date, server_default=text("('')"))
    update_user = Column(Unicode(30), server_default=text("('')"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class Traffic(DBase):
    __tablename__ = 'Traffic'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    aadt_10 = Column(Float(53), server_default=text("((0))"))
    begin_km = Column(Float(53), server_default=text("((0))"))
    county_nam = Column(Unicode(250), server_default=text("('')"))
    data_accum = Column(Unicode(250), server_default=text("('')"))
    dir_dist = Column(Float(53), server_default=text("((0))"))
    end_km = Column(Float(53), server_default=text("((0))"))
    flex_e_10 = Column(Float(53), server_default=text("((0))"))
    flex_fac = Column(Float(53), server_default=text("((0))"))
    grow_rate = Column(Float(53), server_default=text("((0))"))
    maint_dis_ = Column(Float(53), server_default=text("((0))"))
    pvmt_analy = Column(Float(53), server_default=text("((0))"))
    rigid_e_10 = Column(Float(53), server_default=text("((0))"))
    rigid_fac = Column(Float(53), server_default=text("((0))"))
    route_id = Column(Unicode(250), server_default=text("('')"))
    trk_ln_dis = Column(Float(53), server_default=text("((0))"))
    truck_pct = Column(Float(53), server_default=text("((0))"))
    type = Column(Unicode(250), server_default=text("('')"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class WeightLimit(DBase):
    __tablename__ = 'WeightLimits'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    Name = Column(Unicode(250), nullable=False, index=True)
    WeightLimit = Column(Unicode(4000), server_default=text("('')"))
    TRUCK_PARKWAYDESC = Column(Unicode(4000), server_default=text("('')"))
    OwnerId = Column(UNIQUEIDENTIFIER)


class BaseChunk(DBase):
    __tablename__ = 'Base_Chunks'

    ID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newsequentialid())"))
    LRPID = Column(ForeignKey('Base.ID'), nullable=False, index=True, server_default=text("(newid())"))
    ChunkID = Column(ForeignKey('Chunks.ID'), nullable=False, index=True, server_default=text("(newid())"))
    FromMeasure = Column(Numeric(18, 6), server_default=text("(NULL)"))
    ToMeasure = Column(Numeric(18, 6), server_default=text("(NULL)"))
    From = Column(Numeric(18, 6), server_default=text("(NULL)"))
    To = Column(Numeric(18, 6), server_default=text("(NULL)"))
    Order = Column(SmallInteger)
    ValidOn = Column(DateTime)
    ValidTo = Column(DateTime)
    EndedOn = Column(DateTime)
    Offset = Column(Numeric(18, 6), server_default=text("(NULL)"))
    End = Column(Boolean, nullable=False, server_default=text("((1))"))
    Mapping = Column(NullType)
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))

    Chunk = relationship('Chunk')
    Base = relationship('Base')


class AnalysisSamplesBase(DBase):
    __tablename__ = 'AnalysisSamples_Base'
    __table_args__ = (
        Index('s_idx_AnalysisSamples_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    ID = Column(ForeignKey('AnalysisSamples.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    Historic = Column(DateTime, nullable=False, server_default=text("(CONVERT([datetime],'2020-03-31T18:04:48'))"))
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    AnalysisSample = relationship('AnalysisSample')
    Base_Chunk = relationship('BaseChunk')


class AnalysisSectionsBase(DBase):
    __tablename__ = 'Analysis_Sections_Base'
    __table_args__ = (
        Index('s_idx_Analysis_Sections_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    ID = Column(ForeignKey('Analysis_Sections.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    Historic = Column(DateTime, nullable=False, server_default=text("(CONVERT([datetime],'2020-03-31T18:04:49'))"))
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    Analysis_Section = relationship('AnalysisSection')
    Base_Chunk = relationship('BaseChunk')


class AnalysisSectionsRawBase(DBase):
    __tablename__ = 'Analysis_Sections_Raw_Base'
    __table_args__ = (
        Index('s_idx_Analysis_Sections_Raw_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    ID = Column(ForeignKey('Analysis_Sections_Raw.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    Historic = Column(DateTime, nullable=False, server_default=text("(CONVERT([datetime],'2020-03-31T18:05:09'))"))
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    Analysis_Sections_Raw = relationship('AnalysisSectionsRaw')
    Base_Chunk = relationship('BaseChunk')


class ConstRehabHistoryBase(DBase):
    __tablename__ = 'Const_Rehab_History_Base'
    __table_args__ = (
        Index('s_idx_Const_Rehab_History_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    ID = Column(ForeignKey('Const_Rehab_History.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    Lane = Column(BigInteger, nullable=False, server_default=text("((0))"))
    Historic = Column(DateTime, nullable=False, server_default=text("(CONVERT([datetime],'2020-03-31T18:05:16'))"))
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    Const_Rehab_History = relationship('ConstRehabHistory')
    Base_Chunk = relationship('BaseChunk')


class DistFeatTenth2012Base(DBase):
    __tablename__ = 'Dist_Feat_Tenth_2012_Base'
    __table_args__ = (
        Index('s_idx_Dist_Feat_Tenth_2012_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    ID = Column(ForeignKey('Dist_Feat_Tenth_2012.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    Historic = Column(DateTime, nullable=False, server_default=text("(CONVERT([datetime],'2020-03-31T18:05:18'))"))
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    Dist_Feat_Tenth_2012 = relationship('DistFeatTenth2012')
    Base_Chunk = relationship('BaseChunk')


class DstrsFeature2012Base(DBase):
    __tablename__ = 'Dstrs_Feature_2012_Base'
    __table_args__ = (
        Index('s_idx_Dstrs_Feature_2012_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    ID = Column(ForeignKey('Dstrs_Feature_2012.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    Lane = Column(BigInteger, nullable=False, server_default=text("((0))"))
    Historic = Column(DateTime, nullable=False, server_default=text("(CONVERT([datetime],'2020-03-31T18:05:25'))"))
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    Dstrs_Feature_2012 = relationship('DstrsFeature2012')
    Base_Chunk = relationship('BaseChunk')


class LandmarkBase(DBase):
    __tablename__ = 'Landmark_Base'
    __table_args__ = (
        Index('pt_idx_Landmark_Base', 'ID', 'NetworkID', 'At'),
    )

    ID = Column(ForeignKey('Landmark.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, index=True, server_default=text("(newid())"))
    At = Column(Numeric(18, 6), server_default=text("((0))"))
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    Landmark = relationship('Landmark')
    Base_Chunk = relationship('BaseChunk')


class SampleSegmentBase(DBase):
    __tablename__ = 'Sample_Segment_Base'
    __table_args__ = (
        Index('s_idx_Sample_Segment_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    ID = Column(ForeignKey('Sample_Segment.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    Historic = Column(DateTime, nullable=False, server_default=text("(CONVERT([datetime],'2020-03-31T18:05:38'))"))
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    Sample_Segment = relationship('SampleSegment')
    Base_Chunk = relationship('BaseChunk')


class TrafficBase(DBase):
    __tablename__ = 'Traffic_Base'
    __table_args__ = (
        Index('s_idx_Traffic_Base', 'NetworkID', 'From', 'To'),
    )

    ID = Column(ForeignKey('Traffic.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    Traffic = relationship('Traffic')
    Base_Chunk = relationship('BaseChunk')


class WeightLimitsBase(DBase):
    __tablename__ = 'WeightLimits_Base'
    __table_args__ = (
        Index('s_idx_WeightLimits_Base', 'NetworkID', 'From', 'To'),
    )

    ID = Column(ForeignKey('WeightLimits.ID'), nullable=False, index=True, server_default=text("(newid())"))
    NetworkID = Column(ForeignKey('Base_Chunks.ID'), nullable=False, server_default=text("(newid())"))
    From = Column(Numeric(18, 6), server_default=text("((0))"))
    To = Column(Numeric(18, 6), server_default=text("((0))"))
    Order = Column(SmallInteger)
    ElementID = Column(UNIQUEIDENTIFIER, primary_key=True, server_default=text("(newid())"))
    CreatedOn = Column(DATETIMEOFFSET, server_default=text("(sysdatetimeoffset())"))
    CreatedBy = Column(Unicode(300), server_default=text("(user_name())"))
    ModifiedOn = Column(DATETIMEOFFSET)
    ModifiedBy = Column(Unicode(300))

    WeightLimit = relationship('WeightLimit')
    Base_Chunk = relationship('BaseChunk')
