# coding: utf-8
from sqlalchemy import CHAR, CheckConstraint, Column, DateTime, Float, ForeignKey, Index, Integer, NVARCHAR, TIMESTAMP, Table, VARCHAR, text
from sqlalchemy.dialects.oracle import NUMBER
from sqlalchemy.orm import relationship
from sqlalchemy.sql.sqltypes import NullType
from sqlalchemy.ext.declarative import declarative_base


import sqlalchemy as sa
import sqlalchemy.orm as sao
import sqlalchemy.ext.declarative as sad
from sqlalchemy.ext.automap import automap_base

maker = sao.sessionmaker(autoflush=True, autocommit=False)
DBSession = sao.scoped_session(maker)

DBase = sad.declarative_base()
metadata = DBase.metadata

def init_model(engine):
    """Call me before using any of the tables or classes in the model."""
    DBSession.configure(bind=engine)



t_Analysis_Section_Logging = Table(
    'Analysis_Section_Logging', metadata,
    Column('date_changed', TIMESTAMP),
    Column('action', VARCHAR(30)),
    Column('original_section_id', NUMBER(7, 0, False), server_default=text("0")),
    Column('first_new_section_id', NUMBER(7, 0, False), server_default=text("0")),
    Column('second_new_section_id', NUMBER(7, 0, False), server_default=text("0")),
    Column('third_new_section_id', NUMBER(7, 0, False), server_default=text("0"))
)


class AnalysisSection(DBase):
    __tablename__ = 'Analysis_Sections'

    id = Column(CHAR(36), primary_key=True)
    Name = Column(VARCHAR(250), nullable=False, index=True)
    Historic = Column(DateTime, server_default=text("SYSDATE"))
    measured_section_length = Column(Float)
    paved_shoulder_ind = Column(VARCHAR(1))
    plan_section_length = Column(Float)
    pvmt_anlyss_sctn_nhs_ind = Column(VARCHAR(1))
    pvmt_mdfd_structure_nmbr = Column(Float)
    pvmt_memo = Column(VARCHAR(200))
    pvmt_pre_type_code = Column(VARCHAR(5))
    pvmt_structure_nmbr = Column(Float)
    pvmt_type_code = Column(VARCHAR(5))
    pvmt_type_desc = Column(VARCHAR(30))
    right_shoulder_width_code = Column(VARCHAR(4))
    right_shoulder_width_desc = Column(VARCHAR(30))
    route_id = Column(VARCHAR(11))
    total_roadway_width_code = Column(VARCHAR(4))
    total_roadway_width_desc = Column(VARCHAR(30))
    update_date = Column(DateTime)
    update_user = Column(VARCHAR(30))
    begin_long = Column(Float)
    end_long = Column(Float)
    dFragWithSkip_Cluster = Column(VARCHAR(10))
    begin_english_station_nmbr = Column(VARCHAR(30))
    begin_landmark_desc = Column(VARCHAR(50))
    begin_lat = Column(Float)
    create_date = Column(DateTime)
    create_user = Column(VARCHAR(30))
    data_accum_direction = Column(VARCHAR(1))
    divided_hwy_ind = Column(VARCHAR(1))
    end_english_station_nmbr = Column(VARCHAR(30))
    end_landmark_desc = Column(VARCHAR(50))
    end_lat = Column(Float)
    left_shoulder_width_code = Column(VARCHAR(4))
    left_shoulder_width_desc = Column(VARCHAR(30))
    max_trffc_growth_rate = Column(Float)
    max_truck_trffc_pct = Column(Float)
    pvmt_analysis_section_id_ = Column(VARCHAR(10))
    county_name = Column(VARCHAR(100))
    sri = Column(VARCHAR(10))
    SRI_From = Column(Float)
    SRI_To = Column(Float)
    road_type = Column(VARCHAR(25))
    weight = Column(VARCHAR(25))
    anl_rural = Column(VARCHAR(5))
    Default_Double = Column(Float)
    ph_rehab_type_code = Column(VARCHAR(3))
    ph_resurfacing_type_code = Column(VARCHAR(3))
    pvmt_type_code_clustering = Column(VARCHAR(255))
    anl_chip_seal = Column(VARCHAR(5))
    ph_pvmt_proj_actl_end_date = Column(DateTime)
    ph_rehab_thickness = Column(Float)
    eold = Column(Integer)
    esal = Column(Float)
    Budget_Category_Override = Column(VARCHAR(50))
    com_trt = Column(VARCHAR(200))
    com_cost = Column(Float)
    Attribute51 = Column(VARCHAR(10))
    esal_aadt = Column(Float)
    esal_pct_trucks = Column(Float)
    f_lKey = Column(Float)
    RT_Class = Column(VARCHAR(10))
    RD_Name = Column(VARCHAR(50))
    Reversed = Column(NUMBER(1, 0, False), server_default=text("0"))
    Comments = Column(VARCHAR(255))
    zz_Deighton_Fix = Column(NUMBER(1, 0, False), server_default=text("0"))
    zDensityAttribute = Column(NUMBER(28, 15, True))
    dd_Alligator_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Alligator_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Alligator_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_avg_fault_depth_qty = Column(NUMBER(28, 15, True))
    dd_avg_iri_qty = Column(NUMBER(28, 15, True))
    dd_avg_rut_depth = Column(NUMBER(28, 15, True))
    dd_Bleeding_0 = Column(NUMBER(28, 15, True))
    dd_Bleeding_1 = Column(NUMBER(28, 15, True))
    dd_Bleeding_2 = Column(NUMBER(28, 15, True))
    dd_Block_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Block_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Block_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Blowup_0 = Column(NUMBER(28, 15, True))
    dd_Blowup_1 = Column(NUMBER(28, 15, True))
    dd_Blowup_2 = Column(NUMBER(28, 15, True))
    dd_Corner_Break_0 = Column(NUMBER(28, 15, True))
    dd_Corner_Break_1 = Column(NUMBER(28, 15, True))
    dd_Corner_Break_2 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Edge_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Edge_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Edge_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Faulting_0 = Column(NUMBER(28, 15, True))
    dd_Faulting_1 = Column(NUMBER(28, 15, True))
    dd_Faulting_2 = Column(NUMBER(28, 15, True))
    dd_IRI_0 = Column(NUMBER(28, 15, True))
    dd_IRI_1 = Column(NUMBER(28, 15, True))
    dd_IRI_2 = Column(NUMBER(28, 15, True))
    dd_Joint_Count_0 = Column(NUMBER(28, 15, True))
    dd_Joint_Count_1 = Column(NUMBER(28, 15, True))
    dd_Joint_Count_2 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_0 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_1 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_2 = Column(NUMBER(28, 15, True))
    dd_Joint_Seal_Deterioration_0 = Column(NUMBER(28, 15, True))
    dd_Joint_Seal_Deterioration_1 = Column(NUMBER(28, 15, True))
    dd_Joint_Seal_Deterioration_2 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_0 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_1 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_2 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Map_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Map_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Map_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Patching_0 = Column(NUMBER(28, 15, True))
    dd_Patching_1 = Column(NUMBER(28, 15, True))
    dd_Patching_2 = Column(NUMBER(28, 15, True))
    dd_Potholes_0 = Column(NUMBER(28, 15, True))
    dd_Potholes_1 = Column(NUMBER(28, 15, True))
    dd_Potholes_2 = Column(NUMBER(28, 15, True))
    dd_Pumping_0 = Column(NUMBER(28, 15, True))
    dd_Pumping_1 = Column(NUMBER(28, 15, True))
    dd_Pumping_2 = Column(NUMBER(28, 15, True))
    dd_Punchouts_0 = Column(NUMBER(28, 15, True))
    dd_Punchouts_1 = Column(NUMBER(28, 15, True))
    dd_Punchouts_2 = Column(NUMBER(28, 15, True))
    dd_Punchouts_ph = Column(NUMBER(28, 15, True))
    dd_Raveling_0 = Column(NUMBER(28, 15, True))
    dd_Raveling_1 = Column(NUMBER(28, 15, True))
    dd_Raveling_2 = Column(NUMBER(28, 15, True))
    dd_Refl_Crack_Transverse_0 = Column(NUMBER(28, 15, True))
    dd_Refl_Crack_Transverse_1 = Column(NUMBER(28, 15, True))
    dd_Refl_Crack_Transverse_2 = Column(NUMBER(28, 15, True))
    dd_Reflective_Cracking_Long_0 = Column(NUMBER(28, 15, True))
    dd_Reflective_Cracking_Long_1 = Column(NUMBER(28, 15, True))
    dd_Reflective_Cracking_Long_2 = Column(NUMBER(28, 15, True))
    dd_Rutting_0 = Column(NUMBER(28, 15, True))
    dd_Rutting_1 = Column(NUMBER(28, 15, True))
    dd_Rutting_2 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_0 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_1 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_0 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_1 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_2 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_0 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_1 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_2 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Alligator_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Alligator_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Alligator_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Bleeding_0 = Column(NUMBER(28, 15, True))
    ds_Bleeding_1 = Column(NUMBER(28, 15, True))
    ds_Bleeding_2 = Column(NUMBER(28, 15, True))
    ds_Block_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Block_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Block_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Blowup_0 = Column(NUMBER(28, 15, True))
    ds_Blowup_1 = Column(NUMBER(28, 15, True))
    ds_Blowup_2 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_0 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_1 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_2 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Edge_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Edge_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Edge_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Faulting_0 = Column(NUMBER(28, 15, True))
    ds_Faulting_1 = Column(NUMBER(28, 15, True))
    ds_Faulting_2 = Column(NUMBER(28, 15, True))
    ds_IRI_0 = Column(NUMBER(28, 15, True))
    ds_IRI_1 = Column(NUMBER(28, 15, True))
    ds_IRI_2 = Column(NUMBER(28, 15, True))
    ds_Joint_Count_0 = Column(NUMBER(28, 15, True))
    ds_Joint_Count_1 = Column(NUMBER(28, 15, True))
    ds_Joint_Count_2 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_0 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_1 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_2 = Column(NUMBER(28, 15, True))
    ds_Joint_Seal_Deterioration_0 = Column(NUMBER(28, 15, True))
    ds_Joint_Seal_Deterioration_1 = Column(NUMBER(28, 15, True))
    ds_Joint_Seal_Deterioration_2 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_0 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_1 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_2 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Map_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Map_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Map_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Patching_0 = Column(NUMBER(28, 15, True))
    ds_Patching_1 = Column(NUMBER(28, 15, True))
    ds_Patching_2 = Column(NUMBER(28, 15, True))
    ds_Potholes_0 = Column(NUMBER(28, 15, True))
    ds_Potholes_1 = Column(NUMBER(28, 15, True))
    ds_Potholes_2 = Column(NUMBER(28, 15, True))
    ds_Pumping_0 = Column(NUMBER(28, 15, True))
    ds_Pumping_1 = Column(NUMBER(28, 15, True))
    ds_Pumping_2 = Column(NUMBER(28, 15, True))
    ds_Punchouts_0 = Column(NUMBER(28, 15, True))
    ds_Punchouts_1 = Column(NUMBER(28, 15, True))
    ds_Punchouts_2 = Column(NUMBER(28, 15, True))
    ds_Raveling_0 = Column(NUMBER(28, 15, True))
    ds_Raveling_1 = Column(NUMBER(28, 15, True))
    ds_Raveling_2 = Column(NUMBER(28, 15, True))
    ds_Refl_Crack_Transverse_0 = Column(NUMBER(28, 15, True))
    ds_Refl_Crack_Transverse_1 = Column(NUMBER(28, 15, True))
    ds_Refl_Crack_Transverse_2 = Column(NUMBER(28, 15, True))
    ds_Reflective_Cracking_Long_0 = Column(NUMBER(28, 15, True))
    ds_Reflective_Cracking_Long_1 = Column(NUMBER(28, 15, True))
    ds_Reflective_Cracking_Long_2 = Column(NUMBER(28, 15, True))
    ds_Rutting_0 = Column(NUMBER(28, 15, True))
    ds_Rutting_1 = Column(NUMBER(28, 15, True))
    ds_Rutting_2 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_0 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_1 = Column(NUMBER(28, 15, True))
    ds_Spalling_Longitudinal_0 = Column(NUMBER(28, 15, True))
    ds_Spalling_Longitudinal_1 = Column(NUMBER(28, 15, True))
    ds_Spalling_Longitudinal_2 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_0 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_1 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_2 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_2 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_2 = Column(NUMBER(28, 15, True))
    FilterColumn = Column(NUMBER(1, 0, False), server_default=text("0"))
    dd_data_orientation = Column(VARCHAR(10))
    Trt_Family = Column(VARCHAR(50))
    survey_avg_lane_width = Column(NUMBER(5, 3, True))
    design_lane_width = Column(NUMBER(5, 3, True))
    anlss_sctn_annual_flex_esal = Column(NUMBER(7, 0, False), server_default=text("0 "))
    anlss_sctn_annual_rigid_esal = Column(NUMBER(7, 0, False), server_default=text("0 "))
    anlss_sctn_cumul_flex_esal = Column(NUMBER(7, 0, False), server_default=text("0 "))
    anlss_sctn_cumul_rigid_esal = Column(NUMBER(7, 0, False), server_default=text("0 "))
    county_nmbr = Column(NUMBER(5, 0, False), server_default=text("0 "))
    dd_distress_rating_nmbr = Column(NUMBER(5, 0, False), server_default=text("0 "))
    dd_faults_qty = Column(NUMBER(5, 0, False), server_default=text("0 "))
    dd_pvmt_condition_rating_nmbr = Column(NUMBER(5, 0, False), server_default=text("0 "))
    dd_pvmt_section_survey_year = Column(NUMBER(5, 0, False), server_default=text("0 "))
    dd_roughness_rating_nmbr = Column(NUMBER(5, 0, False), server_default=text("0 "))
    document_id = Column(NUMBER(5, 0, False), server_default=text("0 "))
    esal_flexible_annual = Column(NUMBER(7, 0, False), server_default=text("0 "))
    esal_kip_factor = Column(NUMBER(7, 0, False), server_default=text("0 "))
    esal_rigid_annual = Column(NUMBER(7, 0, False), server_default=text("0 "))
    full_annual_flexible_esal = Column(NUMBER(7, 0, False), server_default=text("0 "))
    full_annual_rigid_esal = Column(NUMBER(7, 0, False), server_default=text("0 "))
    full_cumulative_flexible_esal = Column(NUMBER(7, 0, False), server_default=text("0 "))
    full_cumulative_rigid_esal = Column(NUMBER(7, 0, False), server_default=text("0 "))
    maint_dis_nmbr = Column(NUMBER(5, 0, False), server_default=text("0 "))
    mapid = Column(NUMBER(7, 0, False), server_default=text("0 "))
    max_design_hourly_vol = Column(NUMBER(7, 0, False), server_default=text("0 "))
    max_design_hourly_vol_year = Column(NUMBER(5, 0, False), server_default=text("0 "))
    max_trffc_section_aadt = Column(NUMBER(7, 0, False), server_default=text("0 "))
    max_trffc_section_aadt_year = Column(NUMBER(5, 0, False), server_default=text("0 "))
    mslink = Column(NUMBER(5, 0, False), server_default=text("0 "))
    ph_pvmt_rehab_affctd_srfc_pct = Column(NUMBER(5, 0, False), server_default=text("0 "))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False), server_default=text("0 "))
    pvmt_condition_rating_nmbr = Column(NUMBER(5, 0, False), server_default=text("0 "))
    section_lane_cnt = Column(NUMBER(5, 0, False), server_default=text("0 "))
    section_total_lanes = Column(NUMBER(5, 0, False), server_default=text("0 "))
    traffic_esal_base_year = Column(NUMBER(5, 0, False), server_default=text("0 "))
    com_year = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Default_Integer = Column(NUMBER(5, 0, False), server_default=text("0 "))
    FunctionClass = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Pavement_A = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Segment = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Segment_Length = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Year = Column(NUMBER(7, 0, False), server_default=text("0 "))


class AnalysisSectionsDD(DBase):
    __tablename__ = 'Analysis_Sections_DD'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    Name = Column(VARCHAR(250), nullable=False, index=True)
    DataYear = Column(NUMBER(18, 9, True))
    pvmt_section_survey_date = Column(DateTime)
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))
    pvmt_type_code = Column(VARCHAR(5))
    pvmt_type_desc = Column(VARCHAR(30))
    county_name = Column(VARCHAR(100))
    county_nmbr = Column(NUMBER(18, 9, True))
    maint_dis_nmbr = Column(NUMBER(18, 9, True))
    route_id = Column(VARCHAR(11))
    data_accum_direction = Column(VARCHAR(1))
    RD_Name = Column(VARCHAR(50))
    RT_Class = Column(VARCHAR(10))
    road_type = Column(VARCHAR(25))
    section_lane_cnt = Column(NUMBER(18, 9, True))
    section_total_lanes = Column(NUMBER(18, 9, True))
    survey_avg_lane_width = Column(NUMBER(5, 3, True))
    total_roadway_width_code = Column(VARCHAR(4))
    total_roadway_width_desc = Column(VARCHAR(30))
    dd_Alligator_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Alligator_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Alligator_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Corner_Break_0 = Column(NUMBER(28, 15, True))
    dd_Corner_Break_1 = Column(NUMBER(28, 15, True))
    dd_Corner_Break_2 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_0 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_1 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_2 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_0 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_1 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_2 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Patching_0 = Column(NUMBER(28, 15, True))
    dd_Patching_1 = Column(NUMBER(28, 15, True))
    dd_Patching_2 = Column(NUMBER(28, 15, True))
    dd_Potholes_0 = Column(NUMBER(28, 15, True))
    dd_Potholes_1 = Column(NUMBER(28, 15, True))
    dd_Potholes_2 = Column(NUMBER(28, 15, True))
    dd_Punchouts_0 = Column(NUMBER(28, 15, True))
    dd_Punchouts_1 = Column(NUMBER(28, 15, True))
    dd_Punchouts_2 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_0 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_1 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_2 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_0 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_1 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_2 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_0 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_1 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_2 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_2 = Column(NUMBER(28, 15, True))
    Pavement_A = Column(NUMBER(18, 9, True))
    FilterColumn = Column(NUMBER(18, 9, True))
    create_date = Column(DateTime)
    create_user = Column(VARCHAR(30))
    update_date = Column(DateTime)
    update_user = Column(VARCHAR(30))
    dd_Punchouts_ph = Column(NUMBER(28, 15, True))
    dd_avg_fault_depth_qty = Column(NUMBER(28, 15, True))
    dd_avg_iri_qty = Column(NUMBER(28, 15, True))
    dd_avg_rut_depth = Column(NUMBER(28, 15, True))
    dd_data_orientation = Column(NUMBER(28, 15, True))
    dd_distress_rating_nmbr = Column(NUMBER(28, 15, True))
    dd_faults_qty = Column(NUMBER(28, 15, True))
    dd_pvmt_condition_rating_nmbr = Column(NUMBER(28, 15, True))
    dd_pvmt_section_survey_year = Column(NUMBER(18, 9, True))
    dd_roughness_rating_nmbr = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement = Column(NUMBER(28, 15, True))


class AnalysisSectionsDS(DBase):
    __tablename__ = 'Analysis_Sections_DS'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    Name = Column(VARCHAR(250), nullable=False, index=True)
    pvmt_type_code = Column(VARCHAR(5))
    pvmt_type_desc = Column(VARCHAR(30))
    county_name = Column(VARCHAR(100))
    county_nmbr = Column(NUMBER(18, 9, True))
    maint_dis_nmbr = Column(NUMBER(18, 9, True))
    RD_Name = Column(VARCHAR(50))
    RT_Class = Column(VARCHAR(10))
    road_type = Column(VARCHAR(25))
    section_lane_cnt = Column(NUMBER(18, 9, True))
    section_total_lanes = Column(NUMBER(18, 9, True))
    survey_avg_lane_width = Column(NUMBER(5, 3, True))
    total_roadway_width_code = Column(VARCHAR(4))
    total_roadway_width_desc = Column(VARCHAR(30))
    ds_Alligator_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Alligator_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Alligator_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_0 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_1 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_2 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_0 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_1 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_2 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_0 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_1 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_2 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Patching_0 = Column(NUMBER(28, 15, True))
    ds_Patching_1 = Column(NUMBER(28, 15, True))
    ds_Patching_2 = Column(NUMBER(28, 15, True))
    ds_Potholes_0 = Column(NUMBER(28, 15, True))
    ds_Potholes_1 = Column(NUMBER(28, 15, True))
    ds_Potholes_2 = Column(NUMBER(28, 15, True))
    ds_Punchouts_0 = Column(NUMBER(28, 15, True))
    ds_Punchouts_1 = Column(NUMBER(28, 15, True))
    ds_Punchouts_2 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_0 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_1 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_2 = Column(NUMBER(28, 15, True))
    ds_Spalling_Longitudinal_0 = Column(NUMBER(28, 15, True))
    ds_Spalling_Longitudinal_1 = Column(NUMBER(28, 15, True))
    ds_Spalling_Longitudinal_2 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_0 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_1 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_2 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_2 = Column(NUMBER(28, 15, True))
    DataYear = Column(NUMBER(18, 9, True))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))
    pvmt_section_survey_date = Column(DateTime)
    FilterColumn = Column(NUMBER(18, 9, True))
    Pavement_A = Column(NUMBER(18, 9, True))
    create_date = Column(DateTime)
    data_accum_direction = Column(VARCHAR(1))
    ds_Slab_Replacement = Column(NUMBER(28, 15, True))
    route_id = Column(VARCHAR(11))
    update_date = Column(DateTime)
    update_user = Column(VARCHAR(30))
    create_user = Column(VARCHAR(30))


class AnalysisSectionsRAW(DBase):
    __tablename__ = 'Analysis_Sections_RAW'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    Name = Column(VARCHAR(250), nullable=False, index=True)
    Budget_Category_Override = Column(VARCHAR(50))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))
    com_cost = Column(Float)
    com_trt = Column(VARCHAR(2000))
    com_year = Column(NUMBER(18, 9, True))
    Comments = Column(VARCHAR(255))
    eold = Column(NUMBER(8, 0, False))
    esal = Column(Float)
    FilterColumn = Column(NUMBER(18, 9, True))
    FunctionClass = Column(NUMBER(18, 9, True))
    Pavement_A = Column(NUMBER(18, 9, True))
    RD_Name = Column(VARCHAR(50))
    RT_Class = Column(VARCHAR(10))
    Reversed = Column(NUMBER(18, 9, True))
    sri = Column(VARCHAR(10))
    SRI_From = Column(Float)
    SRI_To = Column(Float)
    Segment = Column(NUMBER(18, 9, True))
    Segment_Length = Column(NUMBER(7, 4, True))
    Trt_Family = Column(VARCHAR(50))
    Year = Column(NUMBER(18, 9, True))
    anl_chip_seal = Column(VARCHAR(5))
    anl_rural = Column(VARCHAR(5))
    anlss_sctn_annual_flex_esal = Column(NUMBER(18, 9, True))
    anlss_sctn_annual_rigid_esal = Column(NUMBER(18, 9, True))
    anlss_sctn_cumul_flex_esal = Column(NUMBER(18, 9, True))
    anlss_sctn_cumul_rigid_esal = Column(NUMBER(18, 9, True))
    begin_english_station_nmbr = Column(VARCHAR(30))
    begin_landmark_desc = Column(VARCHAR(50))
    begin_lat = Column(Float)
    begin_long = Column(Float)
    county_name = Column(VARCHAR(100))
    county_nmbr = Column(NUMBER(18, 9, True))
    create_date = Column(DateTime)
    create_user = Column(VARCHAR(30))
    dFragWithSkip_Cluster = Column(VARCHAR(10))
    data_accum_direction = Column(VARCHAR(1))
    dd_data_orientation = Column(VARCHAR(10))
    dd_faults_qty = Column(NUMBER(18, 9, True))
    dd_pvmt_condition_rating_nmbr = Column(NUMBER(18, 9, True))
    dd_pvmt_section_survey_year = Column(NUMBER(18, 9, True))
    dd_roughness_rating_nmbr = Column(NUMBER(18, 9, True))
    design_lane_width = Column(NUMBER(5, 3, True))
    divided_hwy_ind = Column(VARCHAR(1))
    document_id = Column(NUMBER(18, 9, True))
    dd_distress_rating_nmbr = Column(NUMBER(18, 9, True))
    end_english_station_nmbr = Column(VARCHAR(30))
    end_landmark_desc = Column(VARCHAR(50))
    end_lat = Column(Float)
    end_long = Column(Float)
    esal_aadt = Column(Float)
    esal_flexible_annual = Column(NUMBER(18, 9, True))
    esal_kip_factor = Column(NUMBER(18, 9, True))
    esal_pct_trucks = Column(Float)
    esal_rigid_annual = Column(NUMBER(18, 9, True))
    full_annual_flexible_esal = Column(NUMBER(18, 9, True))
    full_annual_rigid_esal = Column(NUMBER(18, 9, True))
    full_cumulative_flexible_esal = Column(NUMBER(18, 9, True))
    full_cumulative_rigid_esal = Column(NUMBER(18, 9, True))
    left_shoulder_width_code = Column(VARCHAR(4))
    left_shoulder_width_desc = Column(VARCHAR(30))
    maint_dis_nmbr = Column(NUMBER(18, 9, True))
    max_design_hourly_vol = Column(NUMBER(18, 9, True))
    max_design_hourly_vol_year = Column(NUMBER(18, 9, True))
    max_trffc_growth_rate = Column(Float)
    max_trffc_section_aadt = Column(NUMBER(18, 9, True))
    max_trffc_section_aadt_year = Column(NUMBER(18, 9, True))
    max_truck_trffc_pct = Column(Float)
    measured_section_length = Column(Float)
    paved_shoulder_ind = Column(VARCHAR(1))
    ph_pvmt_proj_actl_end_date = Column(DateTime)
    ph_pvmt_rehab_affctd_srfc_pct = Column(NUMBER(18, 9, True))
    ph_rehab_thickness = Column(Float)
    ph_rehab_type_code = Column(VARCHAR(3))
    ph_resurfacing_type_code = Column(VARCHAR(3))
    plan_section_length = Column(Float)
    pvmt_anlyss_sctn_nhs_ind = Column(VARCHAR(1))
    pvmt_condition_rating_nmbr = Column(NUMBER(18, 9, True))
    pvmt_mdfd_structure_nmbr = Column(Float)
    pvmt_memo = Column(VARCHAR(200))
    pvmt_pre_type_code = Column(VARCHAR(5))
    pvmt_structure_nmbr = Column(Float)
    pvmt_type_code = Column(VARCHAR(5))
    pvmt_type_code_clustering = Column(VARCHAR(255))
    pvmt_type_desc = Column(VARCHAR(30))
    right_shoulder_width_code = Column(VARCHAR(4))
    right_shoulder_width_desc = Column(VARCHAR(30))
    road_type = Column(VARCHAR(25))
    route_id = Column(VARCHAR(11))
    section_lane_cnt = Column(NUMBER(18, 9, True))
    section_total_lanes = Column(NUMBER(18, 9, True))
    survey_avg_lane_width = Column(NUMBER(5, 3, True))
    total_roadway_width_code = Column(VARCHAR(4))
    total_roadway_width_desc = Column(VARCHAR(30))
    traffic_esal_base_year = Column(NUMBER(18, 9, True))
    update_date = Column(DateTime)
    update_user = Column(VARCHAR(300))
    weight = Column(VARCHAR(25))
    zDensityAttribute = Column(NUMBER(28, 15, True))
    zz_Deighton_Fix = Column(NUMBER(18, 9, True))
    pvmt_analysis_section_id_ = Column(VARCHAR(10))
    dd_avg_fault_depth_qty = Column(NUMBER(28, 15, True))
    dd_avg_iri_qty = Column(NUMBER(28, 15, True))
    dd_avg_rut_depth = Column(NUMBER(28, 15, True))
    Henery = Column(VARCHAR(10))


class Base(DBase):
    __tablename__ = 'Base'

    id = Column(CHAR(36), primary_key=True)
    Name = Column(VARCHAR(250), nullable=False, index=True)
    #SelectRole = Column(VARCHAR(256))
    #UpdateRole = Column(VARCHAR(256))
    #DeleteRole = Column(VARCHAR(256))
    Route_Class = Column(VARCHAR(10))
    Route_ID = Column(VARCHAR(10))
    Pass_Direction = Column(VARCHAR(10))
    Inventory_Number = Column(VARCHAR(20))
    id_1 = Column(Float)
    Street_Name = Column(VARCHAR(50))
    #zz_Deighton_Fix = Column(NUMBER(1, 0, False), server_default=text("0"))
    data_accum_direction = Column(VARCHAR(10))
    County = Column(NUMBER(7, 0, False), server_default=text("0 "))
    #Segment_Number = Column(NUMBER(7, 0, False), server_default=text("0 "))

    #Lane = relationship('Lane', secondary='Lane_Base')


class BaseChunk(DBase):
    __tablename__ = 'Base_Chunks'
    __table_args__ = (
        CheckConstraint('"End" IN (1,0)'),
    )

    id = Column(CHAR(36), primary_key=True)
    lrpid = Column(CHAR(36), nullable=False, index=True)
    ChunkID = Column(CHAR(36), nullable=False, index=True)
    FromMeasure = Column(NUMBER(18, 6, True), nullable=False)
    ToMeasure = Column(NUMBER(18, 6, True), nullable=False)
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(Integer)
    ValidOn = Column(DateTime)
    ValidTo = Column(DateTime)
    CreatedOn = Column(DateTime)
    EndedOn = Column(DateTime)
    Map = Column(NullType)
    End = Column(NUMBER(1, 0, False), server_default=text("1"))
    Offset = Column(NUMBER(18, 6, True), nullable=False, server_default=text("0 "))


class Chunk(DBase):
    __tablename__ = 'Chunks'

    id = Column(CHAR(36), primary_key=True)
    Length = Column(NUMBER(18, 6, True), nullable=False)
    Geo = Column(NullType)


t_Const_Reh_Lyr_Detail = Table(
    'Const_Reh_Lyr_Detail', metadata,
    Column('id', CHAR(36), nullable=False),
    Column('Name', VARCHAR(250), nullable=False, unique=True),
    Column('pvmt_proj_nmbr_detail', VARCHAR(70)),
    Column('first_rehab_material_desc', VARCHAR(30)),
    Column('second_rehab_material_desc', VARCHAR(30)),
    Column('proj_nmbr', VARCHAR(20)),
    Column('pvmt_course_thickness', Float),
    Column('pvmt_layer_material_desc', VARCHAR(30)),
    Column('create_date', DateTime),
    Column('create_user', VARCHAR(30)),
    Column('update_date', DateTime),
    Column('update_user', VARCHAR(30)),
    Column('f_szForiegnKey', VARCHAR(20)),
    Column('material_type_code', VARCHAR(10)),
    Column('material_type_desc', VARCHAR(80)),
    Column('first_material_property', VARCHAR(15)),
    Column('second_material_property', VARCHAR(10)),
    Column('third_material_property', VARCHAR(10)),
    Column('third_rehab_material_desc', VARCHAR(10)),
    Column('MaterialTypeCodeBackup', VARCHAR(4)),
    Column('CreatedBy', VARCHAR(256)),
    Column('CreatedOn', TIMESTAMP),
    Column('EndedBy', VARCHAR(256)),
    Column('EndedOn', TIMESTAMP),
    Column('ModifiedBy', VARCHAR(256)),
    Column('ModifiedOn', TIMESTAMP),
    Column('proj_detail_nmbr', NUMBER(7, 0, False), server_default=text("0")),
    Column('pvmt_analysis_section_id', NUMBER(7, 0, False), server_default=text("0")),
    Column('pvmt_course_nmbr', NUMBER(5, 0, False), server_default=text("0"))
)


class ConstRehabHistory(DBase):
    __tablename__ = 'Const_Rehab_History'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))
    Name = Column(VARCHAR(250), nullable=False, index=True)
    Historic = Column(DateTime, server_default=text("SYSDATE"))
    sri = Column(VARCHAR(10))
    SRI_From = Column(Float)
    SRI_To = Column(Float)
    create_date = Column(DateTime)
    create_user = Column(VARCHAR(30))
    edge_drain_ind = Column(VARCHAR(1))
    milling_thickness = Column(Float)
    overlay_data_entered_date = Column(DateTime)
    paving_fabric_ind = Column(VARCHAR(1))
    proj_detail_nmbr = Column(NUMBER(7, 0, False))
    proj_nmbr = Column(VARCHAR(20))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))
    pvmt_analysis_soil_type_code = Column(VARCHAR(20))
    pvmt_analysis_soil_type_desc = Column(VARCHAR(50))
    pvmt_proj_actl_end_date = Column(DateTime)
    pvmt_proj_nmbr_detail = Column(VARCHAR(20))
    pvmt_rehab_affctd_srfc_pct = Column(NUMBER(7, 0, False))
    pvmt_structure_removed_ind = Column(VARCHAR(10))
    rehab_thickness = Column(Float)
    rehab_type_code = Column(VARCHAR(3))
    rehab_type_desc = Column(VARCHAR(80))
    resurfacing_type_code = Column(VARCHAR(3))
    resurfacing_type_desc = Column(VARCHAR(30))
    total_courses_qty = Column(NUMBER(7, 0, False))
    total_courses_thickness_qty = Column(Float)
    update_date = Column(DateTime)
    update_user = Column(VARCHAR(30))


class DstrsFeature2012(DBase):
    __tablename__ = 'Dstrs_Feature_2012'

    id = Column(CHAR(36), primary_key=True)
    Name = Column(VARCHAR(250), nullable=False, index=True)
    Lane = Column(Integer, nullable=False, server_default=text("0 "))
    Historic = Column(DateTime, server_default=text("SYSDATE"))
    distress_sealed_ind = Column(VARCHAR(1))
    distress_severity_level = Column(VARCHAR(1))
    distress_start_mi = Column(Float)
    feature_area = Column(Float)
    feature_width = Column(Float)
    lane_location_code = Column(VARCHAR(2))
    pvmt_sample_begin_mi = Column(Float)
    sri = Column(VARCHAR(10))
    SRI_From = Column(Float)
    update_date = Column(DateTime)
    update_user = Column(VARCHAR(30))
    create_user = Column(VARCHAR(30))
    create_date = Column(DateTime)
    data_orientation = Column(VARCHAR(1))
    distress_length = Column(Float)
    SRI_To = Column(Float)
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False), server_default=text("0"))
    distress_occurence_nmbr2 = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_section_survey_year = Column(NUMBER(5, 0, False), server_default=text("0"))
    distress_occurence_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    distress_occurence_nmbr1 = Column(NUMBER(7, 0, False), server_default=text("0"))
    distress_nmbr = Column(NUMBER(5, 0, False), server_default=text("0 "))


class FMSProject(DBase):
    __tablename__ = 'FMSProjects'

    id = Column(CHAR(36), primary_key=True)
    Name = Column(VARCHAR(250), nullable=False, unique=True)
    project_no = Column(VARCHAR(20), nullable=False)
    ext_cor_proj_no = Column(VARCHAR(20))
    conv_proj_no = Column(VARCHAR(20))
    plan_begin_dt = Column(DateTime)
    plan_end_dt = Column(DateTime)
    resp_agency = Column(VARCHAR(8))
    geographic_cd = Column(VARCHAR(3))
    geo_cd_title = Column(VARCHAR(40))
    county_name = Column(VARCHAR(30))
    termini = Column(VARCHAR(234))
    route_id = Column(VARCHAR(11))
    project_length = Column(NUMBER(6, 3, True))
    begin_mile = Column(NUMBER(6, 3, True))
    end_mile = Column(NUMBER(6, 3, True))
    proj_type = Column(VARCHAR(8))
    scope_of_work = Column(VARCHAR(20))
    scope_of_work_title = Column(VARCHAR(40))
    program = Column(VARCHAR(40))
    contract = Column(VARCHAR(20), nullable=False)
    contract_typ = Column(VARCHAR(2), nullable=False)
    contractor_name = Column(VARCHAR(40))
    contract_let_date = Column(DateTime)
    actual_start_work_date = Column(DateTime)
    director_accept_date = Column(DateTime)
    project_engineer = Column(VARCHAR(40))
    error = Column(VARCHAR(254))
    con_proj_total_expend_amt = Column(NUMBER(7, 0, False), server_default=text("0"))
    nbr_con_on_project = Column(NUMBER(7, 0, False), server_default=text("0"))
    project_det = Column(NUMBER(7, 0, False), server_default=text("0"))


class Landmark(DBase):
    __tablename__ = 'Landmark'

    id = Column(CHAR(36), primary_key=True)
    Name = Column(VARCHAR(250), nullable=False, index=True)
    Landmark_Desc = Column(VARCHAR(250))
    pvmt_analysis_section_id = Column(Float)
    landmark_km_offset = Column(Float)
    create_date = Column(TIMESTAMP)
    create_user = Column(VARCHAR(4000))
    update_date = Column(TIMESTAMP)
    update_user = Column(VARCHAR(4000))


class Lane(DBase):
    __tablename__ = 'Lane'

    id = Column(CHAR(36), primary_key=True)
    Name = Column(VARCHAR(250), nullable=False, unique=True)
    Lane_Code = Column(VARCHAR(10))
    Lane_Description = Column(VARCHAR(100))
    Lane_Width_Code = Column(VARCHAR(10))
    Lane_Width_Description = Column(VARCHAR(100))
    Create_Date = Column(TIMESTAMP)
    Create_User = Column(VARCHAR(100))
    Update_Date = Column(TIMESTAMP)
    Update_User = Column(VARCHAR(100))
    Pavement_Analysis_Section_ID = Column(NUMBER(7, 0, False), server_default=text("0"))


class MDOTDistress(DBase):
    __tablename__ = 'MDOTDistresses'
    __table_args__ = (
        Index('mdotdistresses_sri', 'sri', 'pvmt_analysis_section_id', 'id'),
    )

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUid(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))"))
    DataYear = Column(Integer)
    pvmt_analysis_section_id = Column(NUMBER(asdecimal=False))
    data_orientation = Column(NVARCHAR(1))
    pvmt_section_survey_year = Column(NUMBER(asdecimal=False))
    pvmt_sample_begin_km = Column(NUMBER(asdecimal=False))
    distress_occurence_nmbr = Column(NUMBER(asdecimal=False))
    distress_nmbr = Column(NUMBER(asdecimal=False))
    distress_severity_level = Column(NUMBER(asdecimal=False), nullable=False)
    distress_start_km = Column(NUMBER(asdecimal=False))
    lane_location_code = Column(NVARCHAR(2))
    distress_length = Column(NUMBER(asdecimal=False))
    feature_width = Column(NUMBER(asdecimal=False))
    distress_sealed_ind = Column(NVARCHAR(1))
    feature_area = Column(NUMBER(asdecimal=False))
    create_date = Column(DateTime)
    create_user = Column(NVARCHAR(30))
    update_date = Column(DateTime)
    update_user = Column(NVARCHAR(30))
    BeginPerc = Column(NUMBER(30, 20, True))
    EndPerc = Column(NUMBER(30, 20, True))
    sri = Column(VARCHAR(250))
    Begin_mi = Column(NUMBER(18, 6, True))
    Length_in = Column(NUMBER(18, 6, True))


class MDOTSectionCondition(DBase):
    __tablename__ = 'MDOTSectionCondition'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))
    Name = Column(VARCHAR(250), nullable=False, unique=True)
    pvmt_section_survey_date = Column(TIMESTAMP)
    Create_date = Column(TIMESTAMP)
    Update_date = Column(TIMESTAMP)
    pvmt_section_survey_year = Column(Float)
    pvmt_analysis_section_id = Column(Float)
    pvmt_condition_rating_nmbr = Column(Float)
    roughness_rating_nmbr = Column(Float)
    distress_rating_nmbr = Column(Float)
    avg_iri_qty = Column(Float)
    high_iri_pct = Column(Float)
    medium_iri_pct = Column(Float)
    low_iri_pct = Column(Float)
    avg_rut_depth = Column(Float)
    high_rutting_pct = Column(Float)
    medium_rutting_pct = Column(Float)
    low_rutting_pct = Column(Float)
    avg_fault_depth_qty = Column(Float)
    high_faulting_pct = Column(Float)
    medium_faulting_pct = Column(Float)
    low_faulting_pct = Column(Float)
    center_texture_nmbr = Column(Float)
    left_texture_nmbr = Column(Float)
    Right_texture_nmbr = Column(Float)
    sub_pvmt_survey_pvmt_type_code = Column(VARCHAR(4000))
    sub_pvmt_survey_pvmt_type_desc = Column(VARCHAR(4000))
    pvmt_survey_pvmt_type_code = Column(VARCHAR(4000))
    pvmt_survey_pvmt_type_desc = Column(VARCHAR(4000))
    Create_user = Column(VARCHAR(4000))
    Update_user = Column(VARCHAR(4000))
    data_orientation = Column(VARCHAR(4000))
    avg_iri_qty_eng = Column(Float)
    avg_iri_qty_met = Column(Float)


class SampleSegment(DBase):
    __tablename__ = 'Sample_Segment'

    id = Column(CHAR(36), primary_key=True)
    Name = Column(VARCHAR(250), nullable=False, index=True)
    Historic = Column(DateTime, server_default=text("SYSDATE"))
    pvmt_sample_begin_mi = Column(Float)
    pvmt_sample_end_mi = Column(Float)
    pvmt_sample_end_video_frame = Column(VARCHAR(14))
    pvmt_sample_start_video_frame = Column(VARCHAR(14))
    update_date = Column(DateTime)
    update_user = Column(VARCHAR(30))
    create_date = Column(DateTime)
    create_user = Column(VARCHAR(30))
    sri = Column(VARCHAR(10))
    SRI_From = Column(Float)
    SRI_To = Column(Float)
    pvmt_section_survey_year = Column(NUMBER(5, 0, False), server_default=text("0"))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_sample_nmbr = Column(NUMBER(5, 0, False), server_default=text("0"))
    tape_set_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))


class Sect10thMile(DBase):
    __tablename__ = 'Sect_10th_Mile'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    Name = Column(VARCHAR(250), nullable=False, index=True)
    Budget_Category_Override = Column(VARCHAR(50))
    com_cost = Column(Float)
    com_trt = Column(VARCHAR(2000))
    com_year = Column(NUMBER(18, 9, True))
    Comments = Column(VARCHAR(255))
    eold = Column(NUMBER(7, 0, False))
    esal = Column(Float)
    FilterColumn = Column(NUMBER(18, 9, True))
    FunctionClass = Column(NUMBER(18, 9, True))
    RD_Name = Column(VARCHAR(50))
    RT_Class = Column(VARCHAR(10))
    Reversed = Column(NUMBER(18, 9, True))
    Segment = Column(NUMBER(18, 9, True))
    Segment_Length = Column(NUMBER(8, 4, True))
    Trt_Family = Column(VARCHAR(50))
    DataYear = Column(NUMBER(18, 9, True))
    Year = Column(NUMBER(18, 9, True))
    anl_chip_seal = Column(VARCHAR(5))
    anl_rural = Column(VARCHAR(5))
    anlss_sctn_annual_flex_esal = Column(NUMBER(18, 9, True))
    anlss_sctn_annual_rigid_esal = Column(NUMBER(18, 9, True))
    anlss_sctn_cumul_flex_esal = Column(NUMBER(18, 9, True))
    anlss_sctn_cumul_rigid_esal = Column(NUMBER(18, 9, True))
    begin_landmark_desc = Column(VARCHAR(50))
    begin_lat = Column(Float)
    begin_long = Column(Float)
    county_name = Column(VARCHAR(100))
    county_nmbr = Column(NUMBER(18, 9, True))
    create_date = Column(DateTime)
    create_user = Column(VARCHAR(30))
    dFragWithSkip_Cluster = Column(VARCHAR(10))
    data_accum_direction = Column(VARCHAR(1))
    dd_Alligator_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Alligator_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Alligator_Cracking_2 = Column(NUMBER(28, 15, True))
    avg_lane_width = Column(NUMBER(4, 2, True))
    dd_Corner_Break_0 = Column(NUMBER(28, 15, True))
    dd_Corner_Break_1 = Column(NUMBER(28, 15, True))
    dd_Corner_Break_2 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_D_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Faulting_0 = Column(NUMBER(28, 15, True))
    dd_Faulting_1 = Column(NUMBER(28, 15, True))
    dd_Faulting_2 = Column(NUMBER(28, 15, True))
    dd_IRI_0 = Column(NUMBER(28, 15, True))
    dd_IRI_1 = Column(NUMBER(28, 15, True))
    dd_IRI_2 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_0 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_1 = Column(NUMBER(28, 15, True))
    dd_Joint_Deterioration_2 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_0 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_1 = Column(NUMBER(28, 15, True))
    dd_Lane_Shoulder_Dropoff_2 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Longitudinal_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_Patching_0 = Column(NUMBER(28, 15, True))
    dd_Patching_1 = Column(NUMBER(28, 15, True))
    dd_Patching_2 = Column(NUMBER(28, 15, True))
    dd_Potholes_0 = Column(NUMBER(28, 15, True))
    dd_Potholes_1 = Column(NUMBER(28, 15, True))
    dd_Potholes_2 = Column(NUMBER(28, 15, True))
    dd_Punchouts_0 = Column(NUMBER(28, 15, True))
    dd_Punchouts_1 = Column(NUMBER(28, 15, True))
    dd_Punchouts_2 = Column(NUMBER(28, 15, True))
    dd_Punchouts_ph = Column(NUMBER(28, 15, True))
    dd_Rutting_0 = Column(NUMBER(28, 15, True))
    dd_Rutting_1 = Column(NUMBER(28, 15, True))
    dd_Rutting_2 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_0 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_1 = Column(NUMBER(28, 15, True))
    dd_Slab_Replacement_2 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_0 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_1 = Column(NUMBER(28, 15, True))
    dd_Spalling_Longitudinal_2 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_0 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_1 = Column(NUMBER(28, 15, True))
    dd_Spalling_Transverse_2 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_0 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_1 = Column(NUMBER(28, 15, True))
    dd_Transverse_Cracking_2 = Column(NUMBER(28, 15, True))
    dd_avg_fault_depth_qty = Column(NUMBER(28, 15, True))
    dd_avg_iri_qty = Column(NUMBER(28, 15, True))
    dd_avg_rut_depth = Column(NUMBER(28, 15, True))
    dd_data_orientation = Column(VARCHAR(10))
    dd_distress_rating_nmbr = Column(NUMBER(18, 9, True))
    dd_faults_qty = Column(NUMBER(18, 9, True))
    dd_pvmt_condition_rating_nmbr = Column(NUMBER(18, 9, True))
    dd_pvmt_section_survey_year = Column(NUMBER(18, 9, True))
    dd_roughness_rating_nmbr = Column(NUMBER(18, 9, True))
    design_lane_width = Column(NUMBER(5, 3, True))
    divided_hwy_ind = Column(VARCHAR(1))
    document_id = Column(NUMBER(18, 9, True))
    ds_Alligator_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Alligator_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Alligator_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_0 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_1 = Column(NUMBER(28, 15, True))
    ds_Corner_Break_2 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_D_Cracking_2 = Column(NUMBER(28, 15, True))
    ds_Faulting_0 = Column(NUMBER(28, 15, True))
    ds_Faulting_1 = Column(NUMBER(28, 15, True))
    ds_Faulting_2 = Column(NUMBER(28, 15, True))
    ds_IRI_0 = Column(NUMBER(28, 15, True))
    ds_IRI_1 = Column(NUMBER(28, 15, True))
    ds_IRI_2 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_0 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_1 = Column(NUMBER(28, 15, True))
    ds_Joint_Deterioration_2 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_0 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_1 = Column(NUMBER(28, 15, True))
    ds_Lane_Shoulder_Dropoff_2 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Longitudinal_Cracking_2 = Column(NUMBER(15, 3, True))
    ds_Patching_0 = Column(NUMBER(28, 15, True))
    ds_Patching_1 = Column(NUMBER(28, 15, True))
    ds_Patching_2 = Column(NUMBER(28, 15, True))
    ds_Potholes_0 = Column(NUMBER(28, 15, True))
    ds_Potholes_1 = Column(NUMBER(28, 15, True))
    ds_Potholes_2 = Column(NUMBER(28, 15, True))
    ds_Punchouts_0 = Column(NUMBER(28, 15, True))
    ds_Punchouts_1 = Column(NUMBER(28, 15, True))
    ds_Punchouts_2 = Column(NUMBER(28, 15, True))
    ds_Raveling_0 = Column(NUMBER(28, 15, True))
    ds_Raveling_1 = Column(NUMBER(28, 15, True))
    ds_Raveling_2 = Column(NUMBER(28, 15, True))
    ds_Rutting_0 = Column(NUMBER(28, 15, True))
    ds_Rutting_1 = Column(NUMBER(28, 15, True))
    ds_Rutting_2 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_0 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_1 = Column(NUMBER(28, 15, True))
    ds_Slab_Replacement_2 = Column(NUMBER(28, 15, True))
    ds_Spalling_Longitudinal_0 = Column(NUMBER(28, 15, True))
    ds_Spalling_Longitudinal_1 = Column(NUMBER(15, 3, True))
    ds_Spalling_Longitudinal_2 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_0 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_1 = Column(NUMBER(28, 15, True))
    ds_Spalling_Transverse_2 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_0 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_1 = Column(NUMBER(28, 15, True))
    ds_Transverse_Cracking_2 = Column(NUMBER(28, 15, True))
    end_landmark_desc = Column(VARCHAR(50))
    end_lat = Column(Float)
    end_long = Column(Float)
    esal_aadt = Column(Float)
    esal_flexible_annual = Column(NUMBER(18, 9, True))
    esal_kip_factor = Column(NUMBER(18, 9, True))
    esal_pct_trucks = Column(Float)
    esal_rigid_annual = Column(NUMBER(18, 9, True))
    full_annual_flexible_esal = Column(NUMBER(18, 9, True))
    full_annual_rigid_esal = Column(NUMBER(18, 9, True))
    full_cumulative_flexible_esal = Column(NUMBER(18, 9, True))
    full_cumulative_rigid_esal = Column(NUMBER(18, 9, True))
    left_shoulder_width_code = Column(VARCHAR(4))
    left_shoulder_width_desc = Column(VARCHAR(30))
    maint_dis_nmbr = Column(NUMBER(18, 9, True))
    max_design_hourly_vol = Column(NUMBER(18, 9, True))
    max_design_hourly_vol_year = Column(NUMBER(18, 9, True))
    max_trffc_growth_rate = Column(Float)
    max_trffc_section_aadt = Column(NUMBER(18, 9, True))
    max_trffc_section_aadt_year = Column(NUMBER(18, 9, True))
    max_truck_trffc_pct = Column(Float)
    measured_section_length = Column(Float)
    paved_shoulder_ind = Column(VARCHAR(1))
    ph_pvmt_proj_actl_end_date = Column(DateTime)
    ph_pvmt_rehab_affctd_srfc_pct = Column(NUMBER(18, 9, True))
    ph_rehab_thickness = Column(Float)
    ph_rehab_type_code = Column(VARCHAR(3))
    ph_resurfacing_type_code = Column(VARCHAR(3))
    plan_section_length = Column(Float)
    pvmt_anlyss_sctn_nhs_ind = Column(VARCHAR(1))
    pvmt_analysis_section_id1 = Column(NUMBER(18, 9, True))
    pvmt_analysis_section_id2 = Column(NUMBER(18, 9, True))
    pvmt_analysis_section_id_1 = Column(VARCHAR(10))
    pvmt_analysis_section_id_2 = Column(VARCHAR(10))
    pvmt_condition_rating_nmbr = Column(NUMBER(18, 9, True))
    pvmt_mdfd_structure_nmbr = Column(Float)
    pvmt_memo = Column(VARCHAR(200))
    pvmt_pre_type_code = Column(VARCHAR(5))
    pvmt_structure_nmbr = Column(Float)
    pvmt_type_code = Column(VARCHAR(5))
    pvmt_type_code_clustering = Column(VARCHAR(255))
    pvmt_type_desc = Column(VARCHAR(30))
    right_shoulder_width_code = Column(VARCHAR(4))
    ight_shoulder_width_desc = Column(VARCHAR(30))
    right_shoulder_width_desc = Column(VARCHAR(30))
    road_type = Column(VARCHAR(25))
    route_id = Column(VARCHAR(11))
    section_lane_cnt = Column(NUMBER(18, 9, True))
    section_total_lanes = Column(NUMBER(18, 9, True))
    survey_avg_lane_width = Column(NUMBER(5, 3, True))
    total_roadway_width_code = Column(VARCHAR(4))
    total_roadway_width_desc = Column(VARCHAR(30))
    traffic_esal_base_year = Column(NUMBER(18, 9, True))
    update_date = Column(DateTime)
    update_user = Column(VARCHAR(30))
    weight = Column(VARCHAR(25))
    sri = Column(VARCHAR(15))
    beginmile = Column(NUMBER(7, 4, True))
    endmile = Column(NUMBER(7, 4, True))
    pid = Column(NUMBER(18, 9, True))


class Traffic(DBase):
    __tablename__ = 'Traffic'

    id = Column(CHAR(36), primary_key=True)
    Name = Column(VARCHAR(250), nullable=False, index=True)
    county_nam = Column(VARCHAR(250))
    maint_dis_ = Column(Float)
    pvmt_analy = Column(Float)
    route_id = Column(VARCHAR(250))
    data_accum = Column(VARCHAR(250))
    begin_km = Column(Float)
    type = Column(VARCHAR(250))
    aadt = Column(Float)
    end_km = Column(Float)
    dir_dist = Column(Float)
    truck_pct = Column(Float)
    grow_rate = Column(Float)
    trk_ln_dis = Column(Float)
    flex_fac = Column(Float)
    aadt_10 = Column(Float)
    rigid_fac = Column(Float)
    flex_e_10 = Column(Float)
    rigid_e_10 = Column(Float)


class WeightLimit(DBase):
    __tablename__ = 'WeightLimits'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))
    Name = Column(VARCHAR(250), nullable=False, index=True)
    WeightLimit = Column(VARCHAR(4000))
    truck_parkwaydesc = Column(VARCHAR(4000))


class DistLandmark(DBase):
    __tablename__ = 'dist_landmarks'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    Name = Column(VARCHAR(250), nullable=False, index=True)
    Description = Column(VARCHAR(100))


class SrvyDistressFeature(DBase):
    __tablename__ = 'srvy_distress_features'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))
    Name = Column(VARCHAR(250), nullable=False, unique=True)
    data_orientation = Column(VARCHAR(1))
    pvmt_sample_begin_mile = Column(NUMBER(5, 3, True))
    route_id = Column(VARCHAR(10))
    data_accumulation_direction = Column(VARCHAR(1))
    distress_severity_level = Column(VARCHAR(1))
    section_begin_mile = Column(NUMBER(5, 3, True))
    section_end_mile = Column(NUMBER(5, 3, True))
    distress_begin_mi = Column(NUMBER(5, 3, True))
    lane_location_code = Column(VARCHAR(1))
    distress_length = Column(NUMBER(7, 2, True))
    feature_width = Column(NUMBER(6, 2, True))
    distress_sealed_ind = Column(VARCHAR(1))
    feature_area = Column(NUMBER(8, 2, True))
    distress_remarks = Column(VARCHAR(50))
    sri = Column(VARCHAR(20))
    mp_start = Column(NUMBER(8, 4, True))
    mp_end = Column(NUMBER(8, 4, True))
    distress_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    distress_occurrence_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    maint_dis_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_sample_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_section_survey_year = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_anal_id_txt = Column(VARCHAR(10))
    county_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))


class SrvyMri110Mile(DBase):
    __tablename__ = 'srvy_mri_1_10_mile'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))
    Name = Column(VARCHAR(250), nullable=False, unique=True)
    route_id = Column(VARCHAR(10))
    segment_avg_iri = Column(NUMBER(8, 3, True))
    segment_avg_iri_eng = Column(NUMBER(8, 3, True))
    county_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))
    pvmt_anal_id_txt = Column(VARCHAR(10))
    sri = Column(VARCHAR(20))
    mp_start = Column(NUMBER(8, 4, True))
    section_begin_mile = Column(NUMBER(8, 4, True))
    section_end_mile = Column(NUMBER(8, 4, True))
    segment_begin_mile = Column(NUMBER(8, 4, True))
    segment_end_mile = Column(NUMBER(8, 4, True))
    mp_end = Column(NUMBER(8, 4, True))
    pvmt_section_survey_year = Column(NUMBER(7, 0, False))


class SrvyPvmtDstrsFeatureTenth(DBase):
    __tablename__ = 'srvy_pvmt_dstrs_feature_tenth'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))
    Name = Column(VARCHAR(250), nullable=False, unique=True)
    route_id = Column(VARCHAR(10))
    data_accumulation_direction = Column(VARCHAR(1))
    Alligator_Cracking_0 = Column(NUMBER(10, 2, True))
    Alligator_Cracking_1 = Column(NUMBER(10, 2, True))
    Alligator_Cracking_2 = Column(NUMBER(10, 2, True))
    Corner_Break_0 = Column(NUMBER(10, 2, True))
    Corner_Break_1 = Column(NUMBER(10, 2, True))
    Corner_Break_2 = Column(NUMBER(10, 2, True))
    D_Cracking_0 = Column(NUMBER(10, 2, True))
    D_Cracking_1 = Column(NUMBER(10, 2, True))
    D_Cracking_2 = Column(NUMBER(10, 2, True))
    Lane_Shoulder_Dropoff_PCC_0 = Column(NUMBER(10, 2, True))
    Lane_Shoulder_Dropoff_PCC_1 = Column(NUMBER(10, 2, True))
    Lane_Shoulder_Dropoff_PCC_2 = Column(NUMBER(10, 2, True))
    LSDropoff_Average_Depth_PCC_0 = Column(NUMBER(10, 2, True))
    LSDropoff_Average_Depth_PCC_1 = Column(NUMBER(10, 2, True))
    LSDropoff_Average_Depth_PCC_2 = Column(NUMBER(10, 2, True))
    Lane_Shoulder_Dropoff_AC_0 = Column(NUMBER(10, 2, True))
    Lane_Shoulder_Dropoff_AC_1 = Column(NUMBER(10, 2, True))
    Lane_Shoulder_Dropoff_AC_2 = Column(NUMBER(10, 2, True))
    LSDropoff_Average_Depth_AC_0 = Column(NUMBER(10, 2, True))
    LSDropoff_Average_Depth_AC_1 = Column(NUMBER(10, 2, True))
    LSDropoff_Average_Depth_AC_2 = Column(NUMBER(10, 2, True))
    Longitudinal_Cracking_AC_0 = Column(NUMBER(7, 3, True))
    Longitudinal_Cracking_AC_1 = Column(NUMBER(7, 3, True))
    Longitudinal_Cracking_AC_2 = Column(NUMBER(7, 3, True))
    Longitudinal_Cracking_PCC_0 = Column(NUMBER(7, 3, True))
    Longitudinal_Cracking__PCC_1 = Column(NUMBER(7, 3, True))
    Longitudinal_Cracking__PCC_2 = Column(NUMBER(7, 3, True))
    Patching_AC_0 = Column(NUMBER(10, 2, True))
    Patching_AC_1 = Column(NUMBER(10, 2, True))
    Patching_AC_2 = Column(NUMBER(10, 2, True))
    Patching__PCC_0 = Column(NUMBER(10, 2, True))
    Patching__PCC_1 = Column(NUMBER(10, 2, True))
    Patching__PCC_2 = Column(NUMBER(10, 2, True))
    Potholes_0 = Column(NUMBER(10, 2, True))
    Potholes_1 = Column(NUMBER(10, 2, True))
    Potholes_2 = Column(NUMBER(10, 2, True))
    Punchouts_0 = Column(NUMBER(10, 2, True))
    Punchouts_1 = Column(NUMBER(10, 2, True))
    Punchouts_2 = Column(NUMBER(10, 2, True))
    Punchout_Repair_0 = Column(NUMBER(10, 2, True))
    Punchout_Repair_1 = Column(NUMBER(10, 2, True))
    Punchout_Repair_2 = Column(NUMBER(10, 2, True))
    Slab_replacement_0 = Column(NUMBER(10, 1, True))
    Slab_replacement_1 = Column(NUMBER(10, 2, True))
    Slab_replacement_2 = Column(NUMBER(10, 2, True))
    Spalling_Longitudinal_0 = Column(NUMBER(10, 2, True))
    Spalling_Longitudinal_1 = Column(NUMBER(10, 2, True))
    Attribute47 = Column(VARCHAR(10))
    Spalling_Longitudinal_2 = Column(NUMBER(10, 2, True))
    Spalling_Transverse_0 = Column(NUMBER(10, 2, True))
    Spalling_Transverse_1 = Column(NUMBER(10, 2, True))
    Spalling_Transverse_2 = Column(NUMBER(10, 2, True))
    Transverse_Cracking_PCC_0 = Column(NUMBER(7, 3, True))
    Transverse_Cracking__PCC_1 = Column(NUMBER(7, 3, True))
    Transverse_Cracking__PCC_2 = Column(NUMBER(7, 3, True))
    Transverse_Cracking_AC_0 = Column(NUMBER(7, 3, True))
    Transverse_Cracking__AC_1 = Column(NUMBER(7, 3, True))
    Transverse_Cracking__AC_2 = Column(NUMBER(7, 3, True))
    sri = Column(VARCHAR(20))
    mp_start = Column(NUMBER(8, 4, True))
    mp_end = Column(NUMBER(8, 4, True))
    county_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_section_survey_year = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_anal_id_txt = Column(VARCHAR(10))
    Length = Column(NUMBER(8, 4, True))
    tenth_begin_mile = Column(NUMBER(8, 4, True))
    tenth_end_mile = Column(NUMBER(8, 4, True))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))


class SrvyPvmtSctnCond(DBase):
    __tablename__ = 'srvy_pvmt_sctn_cond'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))
    Name = Column(VARCHAR(250), nullable=False, unique=True)
    PathwaySegmentId = Column(NUMBER(8, 0, False))
    data_orientation = Column(VARCHAR(1))
    pvmt_section_survey_date = Column(DateTime)
    route_id = Column(VARCHAR(10))
    data_accumulation_direction = Column(VARCHAR(1))
    pvmt_survey_pvmt_type_code = Column(VARCHAR(5))
    increase_decrease = Column(VARCHAR(1))
    begin_landmark_desc = Column(VARCHAR(45))
    end_landmark_desc = Column(VARCHAR(45))
    begin_latitude = Column(NUMBER(8, 6, True))
    begin_longitude = Column(NUMBER(8, 6, True))
    end_latitude = Column(NUMBER(8, 6, True))
    end_longitude = Column(NUMBER(8, 6, True))
    srvy_measured_length = Column(NUMBER(5, 3, True))
    measured_section_length = Column(NUMBER(5, 3, True))
    avg_iri_qty = Column(NUMBER(3, 2, True))
    avg_iri_qty_eng = Column(NUMBER(5, 2, True))
    high_iri_pct = Column(NUMBER(5, 2, True))
    medium_iri_pct = Column(NUMBER(5, 2, True))
    low_iri_pct = Column(NUMBER(5, 2, True))
    rwp_rut = Column(NUMBER(5, 2, True))
    lwp_rut = Column(NUMBER(5, 2, True))
    avg_rut_depth = Column(NUMBER(3, 2, True))
    high_rutting_pct = Column(NUMBER(5, 2, True))
    medium_rutting_pct = Column(NUMBER(5, 2, True))
    low_rutting_pct = Column(NUMBER(5, 2, True))
    avg_fault_depth_qty = Column(NUMBER(3, 2, True))
    high_faulting_pct = Column(NUMBER(5, 2, True))
    medium_faulting_pct = Column(NUMBER(5, 2, True))
    low_faulting_pct = Column(NUMBER(5, 2, True))
    center_texture_nmbr = Column(NUMBER(4, 2, True))
    left_texture_nmbr = Column(NUMBER(4, 2, True))
    right_texture_nmbr = Column(NUMBER(4, 2, True))
    comments = Column(VARCHAR(254))
    sri = Column(VARCHAR(20))
    mp_start = Column(NUMBER(8, 4, True))
    mp_end = Column(NUMBER(8, 4, True))
    county_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    distress_rating_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    faulting_joint_slope_qty = Column(NUMBER(7, 0, False), server_default=text("0"))
    faults_qty = Column(NUMBER(7, 0, False), server_default=text("0"))
    maint_dis_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pct_slabs_cracked = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_condition_rating_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_section_survey_year = Column(NUMBER(7, 0, False), server_default=text("0"))
    roughess_rating_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_anal_id_txt = Column(VARCHAR(10))
    begin_mile = Column(NUMBER(8, 4, True))
    end_mile = Column(NUMBER(8, 4, True))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))


class SrvyPvmtSctnDistres(DBase):
    __tablename__ = 'srvy_pvmt_sctn_distress'

    id = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))
    Name = Column(VARCHAR(250), nullable=False, unique=True)
    data_orientation = Column(VARCHAR(1))
    distress_severity_level = Column(VARCHAR(1))
    distress_desc = Column(VARCHAR(40))
    section_distress_density = Column(NUMBER(11, 8, True))
    linear_ft_per_mile = Column(NUMBER(7, 2, True))
    avg_lane_width_ft = Column(NUMBER(4, 2, True))
    sri = Column(VARCHAR(20))
    mp_start = Column(NUMBER(8, 4, True))
    mp_end = Column(NUMBER(8, 4, True))
    distress_nmbr = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_section_survey_year = Column(NUMBER(7, 0, False), server_default=text("0"))
    pvmt_anal_id_txt = Column(VARCHAR(10))
    pvmt_analysis_section_id = Column(NUMBER(7, 0, False))


class AnalysisSectionsBase(DBase):
    __tablename__ = 'Analysis_Sections_Base'
    __table_args__ = (
        Index('s_idx_Analysis_Sections_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    id = Column(CHAR(36), nullable=False, index=True)
    NetworkID = Column(ForeignKey('Base_Chunks.id', ondelete='CASCADE'), nullable=False)
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(Integer)
    Historic = Column(DateTime, server_default=text("SYSDATE"))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUid(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))

    Base_Chunk = relationship('BaseChunk')


class AnalysisSectionsDDBase(DBase):
    __tablename__ = 'Analysis_Sections_DD_Base'
    __table_args__ = (
        Index('s_idx241398127499034534203', 'NetworkID', 'From', 'To', 'Historic'),
    )

    id = Column(ForeignKey('Analysis_Sections_DD.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    NetworkID = Column(CHAR(36), nullable=False, server_default=text("sys_guid() "))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Historic = Column(DateTime, server_default=text("SYSDATE "))

    Analysis_Sections_DD = relationship('AnalysisSectionsDD')


class AnalysisSectionsDSBase(DBase):
    __tablename__ = 'Analysis_Sections_DS_Base'
    __table_args__ = (
        Index('s_idx28334026057926776550', 'NetworkID', 'From', 'To', 'Historic'),
    )

    id = Column(ForeignKey('Analysis_Sections_DS.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    NetworkID = Column(CHAR(36), nullable=False, server_default=text("sys_guid() "))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Historic = Column(DateTime, server_default=text("SYSDATE "))

    Analysis_Sections_DS = relationship('AnalysisSectionsDS')


class AnalysisSectionsRAWBase(DBase):
    __tablename__ = 'Analysis_Sections_RAW_Base'
    __table_args__ = (
        Index('s_idx160047156926997722801', 'NetworkID', 'From', 'To', 'Historic'),
    )

    id = Column(ForeignKey('Analysis_Sections_RAW.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    NetworkID = Column(CHAR(36), nullable=False, server_default=text("sys_guid() "))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Historic = Column(DateTime, server_default=text("SYSDATE "))

    Analysis_Sections_RAW = relationship('AnalysisSectionsRAW')


class ConstRehabHistoryBase(DBase):
    __tablename__ = 'Const_Rehab_History_Base'
    __table_args__ = (
        Index('s_idx_Const_Rehab_History_Base', 'NetworkID', 'From', 'To', 'Lane', 'Historic'),
    )

    id = Column(ForeignKey('Const_Rehab_History.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    NetworkID = Column(ForeignKey('Base_Chunks.id', ondelete='CASCADE'), nullable=False, server_default=text("sys_guid() "))
    From = Column(NUMBER(18, 6, True), nullable=False, server_default=text("0 "))
    To = Column(NUMBER(18, 6, True), nullable=False, server_default=text("0 "))
    Order = Column(NUMBER(7, 0, False), server_default=text("0"))
    Historic = Column(DateTime, server_default=text("SYSDATE"))
    Lane = Column(NUMBER(14, 0, False), nullable=False, server_default=text("1 "))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUid(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))

    Base_Chunk = relationship('BaseChunk')
    Const_Rehab_History = relationship('ConstRehabHistory')


class DISTLANDMARKSBase(DBase):
    __tablename__ = 'DIST_LANDMARKS_Base'
    __table_args__ = (
        Index('pt_idx_DIST_LANDMARKS_Base', 'NetworkID', 'At'),
    )

    id = Column(ForeignKey('dist_landmarks.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    NetworkID = Column(ForeignKey('Base_Chunks.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    At = Column(NUMBER(18, 6, True), nullable=False)

    Base_Chunk = relationship('BaseChunk')
    dist_landmark = relationship('DistLandmark')


class DstrsFeature2012Base(DBase):
    __tablename__ = 'Dstrs_Feature_2012_Base'
    __table_args__ = (
        Index('s_idx_Dstrs_Feature_2012_Base', 'NetworkID', 'From', 'To', 'Lane', 'Historic'),
    )

    id = Column(ForeignKey('Dstrs_Feature_2012.id'), nullable=False, index=True)
    NetworkID = Column(ForeignKey('Base_Chunks.id'), nullable=False)
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(Integer)
    Lane = Column(Integer, nullable=False, server_default=text("0 "))
    Historic = Column(DateTime, server_default=text("SYSDATE"))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUid(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))

    Base_Chunk = relationship('BaseChunk')
    Dstrs_Feature_2012 = relationship('DstrsFeature2012')


class LandmarkBase(DBase):
    __tablename__ = 'Landmark_Base'
    __table_args__ = (
        Index('pt_idx_Landmark_Base', 'id', 'NetworkID', 'At'),
    )

    id = Column(ForeignKey('Landmark.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    NetworkID = Column(ForeignKey('Base_Chunks.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    At = Column(NUMBER(18, 6, True), nullable=False, server_default=text("0 "))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUid(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))

    Base_Chunk = relationship('BaseChunk')
    Landmark = relationship('Landmark')


t_Lane_Base = Table(
    'Lane_Base', metadata,
    Column('id', ForeignKey('Lane.id', ondelete='CASCADE'), nullable=False, server_default=text("sys_guid() ")),
    Column('NetworkID', ForeignKey('Base.id', ondelete='CASCADE'), nullable=False, server_default=text("sys_guid() "))
)


class SampleSegmentBase(DBase):
    __tablename__ = 'Sample_Segment_Base'
    __table_args__ = (
        Index('s_idx_Sample_Segment_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    id = Column(CHAR(36), nullable=False, index=True)
    NetworkID = Column(ForeignKey('Base_Chunks.id', ondelete='CASCADE'), nullable=False)
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(Integer)
    Historic = Column(DateTime, server_default=text("SYSDATE"))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUid(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))

    Base_Chunk = relationship('BaseChunk')


class Sect10thMileBase(DBase):
    __tablename__ = 'Sect_10th_Mile_Base'
    __table_args__ = (
        Index('s_idx_Sect_10th_Mile_Base', 'NetworkID', 'From', 'To', 'Historic'),
    )

    id = Column(ForeignKey('Sect_10th_Mile.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    NetworkID = Column(ForeignKey('Base_Chunks.id', ondelete='CASCADE'), nullable=False, server_default=text("sys_guid() "))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUID(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5'))  "))
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(NUMBER(7, 0, False), server_default=text("0 "))
    Historic = Column(DateTime, server_default=text("SYSDATE "))

    Base_Chunk = relationship('BaseChunk')
    Sect_10th_Mile = relationship('Sect10thMile')


class TrafficBase(DBase):
    __tablename__ = 'Traffic_Base'
    __table_args__ = (
        Index('s_idx_Traffic_Base', 'NetworkID', 'From', 'To'),
    )

    id = Column(ForeignKey('Traffic.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    NetworkID = Column(ForeignKey('Base_Chunks.id', ondelete='CASCADE'), nullable=False, server_default=text("sys_guid() "))
    From = Column(NUMBER(18, 6, True), nullable=False)
    To = Column(NUMBER(18, 6, True), nullable=False)
    Order = Column(Integer)
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUid(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))

    Base_Chunk = relationship('BaseChunk')
    Traffic = relationship('Traffic')


class WeightLimitsBase(DBase):
    __tablename__ = 'WeightLimits_Base'
    __table_args__ = (
        Index('s_idx_WeightLimits_Base', 'NetworkID', 'From', 'To'),
    )

    id = Column(ForeignKey('WeightLimits.id', ondelete='CASCADE'), nullable=False, index=True, server_default=text("sys_guid() "))
    NetworkID = Column(ForeignKey('Base_Chunks.id', ondelete='CASCADE'), nullable=False, server_default=text("sys_guid() "))
    From = Column(NUMBER(18, 6, True), nullable=False, server_default=text("0 "))
    To = Column(NUMBER(18, 6, True), nullable=False, server_default=text("0 "))
    Order = Column(NUMBER(7, 0, False), server_default=text("0"))
    ElementID = Column(CHAR(36), primary_key=True, server_default=text("lower(REGEXP_REPLACE(SYS_GUid(),'(.{8})(.{4})(.{4})(.{4})(.{12})','\1-\2-\3-\4-\5')) "))

    Base_Chunk = relationship('BaseChunk')
    WeightLimit = relationship('WeightLimit')
